<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[fightmaster's blog]]></title>
  <link href="http://fightmaster.github.io/atom.xml" rel="self"/>
  <link href="http://fightmaster.github.io/"/>
  <updated>2014-01-19T14:11:40+04:00</updated>
  <id>http://fightmaster.github.io/</id>
  <author>
    <name><![CDATA[fightmaster]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Amazon, или клиент всегда прав]]></title>
    <link href="http://fightmaster.github.io/blog/2013/10/30/amazon-or-the-client-always-right.html"/>
    <updated>2013-10-30T22:00:00+04:00</updated>
    <id>http://fightmaster.github.io/blog/2013/10/30/amazon-or-the-client-always-right</id>
    <content type="html"><![CDATA[<p>Сегодня я хочу рассказать одну историю. Она не претендует на всеобщую истину, но я явно не первый с кем она случилась. При этом она еще идет, ее конец никому не известен. Я знаю точно, что спустя два-три дня я не смогу заcтавить себя написать этот пост.</p>

<!-- more -->


<h3>Amazon и kindle</h3>

<p>У меня достаточно ограниченный бюджет, и есть определенный список вещей, которых я хотел бы приобрести в штатах. Электронная книжка одна из таких. В России есть аналоги, но они дороже, и рука не поднимается на покупку. Последние два года моя мама активно пользовалась Pocketbook, но так случилось, что повредился экран. Поэтому, принял решение привезти два киндла. А тут еще в октябре вышло второе поколение paperwhite.</p>

<p>Наконец-то настал тот день, когда я заказал книжки. Спустя недельку они были бесплатненько доставлены.</p>

<h3>Впечатления</h3>

<p>Я скуп на эмоции. Легкая, очень даже, в чехле уже ощущается вес. Можно отключить подсветку, и paperwhite превратиться в обычный kindle. Пробовал читать при свете, в абсолютной темноте, мне очень понравилось. Страницы открываются очень быстро. Легко получилось загрузить книжки, послав их на email от kindle.com, добавив таким образом их в облако, через какое-то время они синхронизировались.</p>

<h3>Ложка дегтя</h3>

<p>Не хотел открывать вторую книжку, так как подарок. Но решил проверить на наличие дефектов. И у второй книжки оказалось 3 белых точки, одна заметная и две другие менее. За два месяца пребывания в штатах я уже наслышан про отношение американцев к клиентам, будь это кафе или магазин, да и сам был свидетелем. Но все равно очень сильно расстроился.</p>

<h3>Клиенты и служба поддержки amazon</h3>

<p>Так как телефон для меня можно вычеркнуть, пробуем через сайт. Для таких как я на амазоне удобная формочка в &ldquo;flow&rdquo; стиле. Пару раз пробовал ее заполнить, один раз даже предложили оформить возврат. В итоге, я выбрал вариант написания сообщения в службу поддержки. Написал кратко, в русском стиле, так и так, пришел брак.</p>

<p>Сразу пришел ответ от робота, что вам ответят в течении 12 часов.</p>

<p>Спустя несколько часов я получил письмо. Менеджер многократно извинялся, что так получилось. Амазон сожалеет о том, что мой киндл с браком. Не мог бы я им позвонить или написать в чат, чтобы они смогли узнать детали. Дальше извинения за то, что меня вынуждают им еще раз написать, и они ни в коем случае мне не отказывают.</p>

<p>Эта вежливость в американском стиле, даже если вы что-то уроните в кафе, официант моментально принесет свои извинения. Вы наступите в магазине кому-то на ногу, перед вами извиняться за то, что помешали вам пройти (такое со мной было в первые дни приезда). Я ненавижу фальшивость слов и эмоций, но здесь я совершенно не испытываю презрения.</p>

<p>Так вот, на следующий день, вечером, я сделал несколько фотографий своего киндла, чтобы описать проблему. А днем решился написать в чат, так как появилась свободная минутка перед обедом. Описал кратко, что так и так, белые точки, что уже обращался и т.д. Мне сказали, мол спокойно, сейчас все решим, переспросили о втором ли &ldquo;издании&rdquo; киндла я говорю и переключили на другой отдел.</p>

<p>И тут самое интересное. Знаете, что я услышал после традиционных &ldquo;hello and welcome&rdquo;? Конечно: &ldquo;How are you doing today?&rdquo;. И мы несколькими фразами перекинулись о том, как у кого дела. С одной стороны, я привык слышать это в кафе или еще где-то. Но вот после русского саппорта, где испытываешь только ненависть после, я был приятно удивлен.</p>

<p>Вежливость, вежливость, вежливость была попутчиком во всем разговоре. Мне сразу сказали, что нет никаких проблем, я могу сразу же его поменять на новый. Спросили согласен ли я на это. Я рассказал, что я очень переживаю, что не успею получить новый киндл, так как уезжаю скоро (через 3 недели). И тут настало время для второй шоковой терапии. Не беспокойтесь мол, мы высылаем товар, не дожидаясь возврата. Вы получите его уже в эту пятницу (а время среда после обеда).</p>

<p>Дальше следует обмен пожеланиями провести хорошо этот вечер, что всегда велкам, мы вам поможем, чем сможем.</p>

<p>После закрытия чата приходит письмо, где среди многочисленных извинений, есть ссылка на лейбл, который необходимо наклеить на коробку на почте. Как я понимаю, помимо обратного адреса, там и &ldquo;проплата&rdquo; за доставку, и так далее. Также приложена инструкция, как я могу быстро найти ближайшее почтовое отделение, и ссылка на &ldquo;перезаказ&rdquo; киндла.</p>

<h3>Придумаем завершение истории</h3>

<p>Даже если вдруг в пятницу не придет книжка, я не расстроюсь. Весь оставшийся день я в приподнятом настроении, даже пост написал. И как заметили друзья, был бы я американцем, амазон приобрел новых покупателей в моем круге общения. У меня даже желания сказать: &ldquo;Ох, эти тупые мальчики и девочки в саппорте&rdquo;, &ndash; нет.</p>

<p>К сожалению, у нас я двадцать минут слушаю музыку в телефоне, потом 20 минут убеждаю девочку, что проблема не на моей стороне, и что я раз в неделю им в течении месяца звоню, они приходят и чинят.. А если у вас не окна и не работает интернет, вам просто хана. Ох, я даже не помню, был ли я доволен службой поддержки в России по какому-либо вопросу?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Все дело в том, что так бывает...]]></title>
    <link href="http://fightmaster.github.io/blog/2013/10/17/the-whole-point-is-that-it-happens.html"/>
    <updated>2013-10-17T23:00:00+04:00</updated>
    <id>http://fightmaster.github.io/blog/2013/10/17/the-whole-point-is-that-it-happens</id>
    <content type="html"><![CDATA[<p>Именно так начинается одно из моих любимых стихотворений. Я собирался сегодня прийти домой и пописать код, но внезапно мне пришла в голову мораль одной басни, сюжет которой случился днем. Рекомендую уделить немного времени, хотя бы потому что это случалось с вами.</p>

<!-- more -->


<p>В статье про <a href="http://fightmaster.github.io/blog/2013/09/25/code-review.html">код ревью</a> был &ldquo;запрос&rdquo; на практическую сторону. Но руки не доходят написать что-то, да и сделать это достаточно сложно, по крайней мере в том виде, в котором я вижу. Скорее всего, она появится из таких маленьких статей, как эта.</p>

<h3>Кусочек сыра</h3>

<p>Сегодня попался на глаза вот такой кусочек кода.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'><span class="c1">//code</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">Utilities</span><span class="o">::</span><span class="na">arrayContains</span><span class="p">(</span><span class="nv">$array1</span><span class="p">,</span> <span class="nv">$array2</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1">//code</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>Думаю что-то не так. Создают функцию в классе <code>Utilities</code> только тогда, когда не могут определить ее принадлежность. Что уже странно. Во-вторых, ну название. Вроде бы и понятно все, с другой стороны, не внушает какого-то доверия.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'><span class="sd">/**</span>
</span><span class='line'><span class="sd"> * @param array $array1</span>
</span><span class='line'><span class="sd"> * @param array $array2</span>
</span><span class='line'><span class="sd"> * @return boolean</span>
</span><span class='line'><span class="sd"> */</span>
</span><span class='line'><span class="k">public</span> <span class="k">static</span> <span class="k">function</span> <span class="nf">arrayContains</span><span class="p">(</span><span class="k">array</span> <span class="nv">$array1</span><span class="p">,</span> <span class="k">array</span> <span class="nv">$array2</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">foreach</span> <span class="p">(</span><span class="nv">$array1</span> <span class="k">as</span> <span class="nv">$value1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nb">in_array</span><span class="p">(</span><span class="nv">$value1</span><span class="p">,</span> <span class="nv">$array2</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="k">true</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>Действительно, несколько раз пробегаю глазами, так как боюсь упустить что-то, заставляя себя поверить в увиденное. Аккуратно оставляю предложение заменить содержание на <code>&lt;?php empty(array_diff($array1, $array2));?&gt;</code>, переименовать или удалить метод.</p>

<p>В итоге вечером получаем&hellip;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'><span class="sd">/**</span>
</span><span class='line'><span class="sd"> * @param array $array1</span>
</span><span class='line'><span class="sd"> * @param array $array2</span>
</span><span class='line'><span class="sd"> * @return boolean</span>
</span><span class='line'><span class="sd"> */</span>
</span><span class='line'><span class="k">public</span> <span class="k">static</span> <span class="k">function</span> <span class="nf">isArrayDiff</span><span class="p">(</span><span class="k">array</span> <span class="nv">$array1</span><span class="p">,</span> <span class="k">array</span> <span class="nv">$array2</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nv">$diff</span> <span class="o">=</span> <span class="nb">array_diff</span><span class="p">(</span><span class="nv">$array1</span><span class="p">,</span> <span class="nv">$array2</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="k">empty</span><span class="p">(</span><span class="nv">$diff</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<h3>Про лису</h3>

<p>Хитрый лис не скажет вороне: &ldquo;Дай сыр, птица&rdquo;. Во-первых, она может не дать его. Во-вторых, навряд ли это чему-то научит, басня-то не получится и морали не будет. Поэтому идеальный вариант для ревью &ndash; это подача чего угодно в наилучшем виде для автора кода. В более сложных случаях я и свой вариант содержания не предлагаю, так как его у меня просто нет. Просто прошу еще раз подумать, в сложных ситуациях спасает парное программирование. При этом не надо выступать в роли оратора или диктатора. Если вы хотите думать за всех, пишите проект один тогда. Не могу сказать, что у меня всегда получается быть хитропопой лисой, но я стараюсь.</p>

<h3>Про чистый код и ворону</h3>

<p>Я думаю, что знаю на 99 процентов причину появления такого метода. Конечно, человек уже наелся определенного куска проекта. Метод вызывается в очень неприятном месте с кучей условных конструкций, хотелось как-то лучше разгрести. Скорее всего, в голову не пришла функция <code>array_diff</code>, и вынос <code>foreach</code> в отдельный метод &ndash; правильный выбор.</p>

<p>Но сам урок начался позже. Методы из двух строчек имеют место быть, все дело в названии. В последнем варианте мы получили обертку над стандартной функцией. В данном контексте она бессмысленна. Если мы захотим реализовать работу со стеком в ООП стиле и обернуть <code>array_pop</code> и <code>array_push</code> в класс и методы, то у нас будет цель и причина всего этого. Здесь цель не прослеживается.</p>

<p>Так что же делать в данном случае? Я бы подумал над куском кода, где это вызывается. Возможно, существует определение этой операции в целом. Ведь массивы что-то содержат, у них есть нормальные имена (в статье они преднамеренно переведены в <code>array1</code> и <code>array2</code>).</p>

<p>Например, если бы <code>array1</code> содержал права пользователя, а <code>array2</code> все необходимые права на просмотр страницы. Тогда, на мой скромный взгляд, метод имеет место быть на 101 процент, с каким-нибудь именем <code>isAllow*</code>.</p>

<p>Если мы не можем как-то определить и выделить по смыслу эти строчки, то и выносить их, скорее всего, нет смысла.</p>

<h3>Мораль басни</h3>

<p>Я думаю, стервятники и любители поржать даже не зайдут в этот скромный блог. В чем же я увидел &ldquo;мораль&rdquo; и почему такое название статьи?</p>

<p>Вы что-то прочитали, у вас куча идей и желание все перехерачить. А что-то идеальное лежит почему-то всегда на &ldquo;горном перевале&rdquo;. Так бывает, что на эмоциях мы проскакиваем его. Прочитали о паттернах &ndash; давай плодить из plain php кучу классов, выстраивать архитектуру, которая в итоге ничуть не понятнее. Прочитали дядюшку Боба &ndash; давай все дробить без остановки. Прочитали про agile &ndash; давай ломать работу проекта. Прочитали статью &ndash; давай сразу внедрять.</p>

<p>Я сам постоянно допускаю подобные ошибки, но при этом думаю, что это правильно. Продолжая горную тему: это лучше, чем сидеть перед перевалом всю жизнь, не совершая каких-то дерзких попыток покорения вершин, или вообще спуститься в долину со словами: &ldquo;Да ну нафиг эти горы&rdquo;. С приобретением опыта наши просчеты уменьшаются, а какими путниками мы станем, зависит только от нас.</p>

<p>Статью завершу словами: &ldquo;Лучше гор могут быть только горы, на которых никто не бывал&rdquo;.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Unit Tests. Data Provider без головной боли]]></title>
    <link href="http://fightmaster.github.io/blog/2013/10/05/unit-tests-data-provider-without-a-headache.html"/>
    <updated>2013-10-05T01:00:00+04:00</updated>
    <id>http://fightmaster.github.io/blog/2013/10/05/unit-tests-data-provider-without-a-headache</id>
    <content type="html"><![CDATA[<p>Недавно текущий проект перевалил за 1500 юнит тестов. Захотелось подвести какой-то итог. И сегодня не будет какого-то рецепта: &ldquo;А делайте так &ndash; получите счастье&rdquo;. Посмотрим на примерах, как можно сделать что-то иначе. Внимание, очень много странных букв под php синтаксисом.</p>

<!-- more -->


<p>Мы с вами не на пробежке, разогреваться нам не надо, начнем сразу с кода. Примеры вымышленные, и я буду использовать аббревиатуру uut (Unit Under Test).</p>

<h3>isPositiveNumber($number)</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'><span class="k">public</span> <span class="k">function</span> <span class="nf">isPositiveNumber</span><span class="p">(</span><span class="nv">$number</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">(</span><span class="nv">$number</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>Тест мог бы выглядеть так:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'><span class="sd">/**</span>
</span><span class='line'><span class="sd"> * @test</span>
</span><span class='line'><span class="sd"> */</span>
</span><span class='line'><span class="k">public</span> <span class="k">function</span> <span class="nf">isPositiveNumber</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nv">$result</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">uut</span><span class="o">-&gt;</span><span class="na">isPositiveNumber</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertTrue</span><span class="p">(</span><span class="nv">$result</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="nv">$result</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">uut</span><span class="o">-&gt;</span><span class="na">isPositiveNumber</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
</span><span class='line'>    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertFalse</span><span class="p">(</span><span class="nv">$result</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="nv">$result</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">uut</span><span class="o">-&gt;</span><span class="na">isPositiveNumber</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertFalse</span><span class="p">(</span><span class="nv">$result</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>Или так:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'><span class="sd">/**</span>
</span><span class='line'><span class="sd"> * @test</span>
</span><span class='line'><span class="sd"> */</span>
</span><span class='line'><span class="k">public</span> <span class="k">function</span> <span class="nf">isPositiveNumberTrueScenario</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nv">$result</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">uut</span><span class="o">-&gt;</span><span class="na">isPositiveNumber</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertTrue</span><span class="p">(</span><span class="nv">$result</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="sd">/**</span>
</span><span class='line'><span class="sd"> * @test</span>
</span><span class='line'><span class="sd"> */</span>
</span><span class='line'><span class="k">public</span> <span class="k">function</span> <span class="nf">isPositiveNumberFalseScenario</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nv">$result</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">uut</span><span class="o">-&gt;</span><span class="na">isPositiveNumber</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
</span><span class='line'>    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertFalse</span><span class="p">(</span><span class="nv">$result</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="nv">$result</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">uut</span><span class="o">-&gt;</span><span class="na">isPositiveNumber</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertFalse</span><span class="p">(</span><span class="nv">$result</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>Мы пишем и пишем так тесты, пока кто-то не прочитает официальную документацию и не узнает, а что такое Data Providers: <a href="http://phpunit.de/manual/3.7/en/writing-tests-for-phpunit.html#writing-tests-for-phpunit.data-providers">phpunit.de</a>. Чаще всего нам необходимо протестировать метод с разными входными данными и проверить результат. Вот для избежания дублирования тестов и придумали эти провайдеры.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'><span class="sd">/**</span>
</span><span class='line'><span class="sd"> * @test</span>
</span><span class='line'><span class="sd"> * @dataProvider isPositiveNumberProvider</span>
</span><span class='line'><span class="sd"> *</span>
</span><span class='line'><span class="sd"> * @param integer $inputData</span>
</span><span class='line'><span class="sd"> * @param boolean $expectedResult</span>
</span><span class='line'><span class="sd"> */</span>
</span><span class='line'><span class="k">public</span> <span class="k">function</span> <span class="nf">isPositiveNumber</span><span class="p">(</span><span class="nv">$inputData</span><span class="p">,</span> <span class="nv">$expectedResult</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nv">$result</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">uut</span><span class="o">-&gt;</span><span class="na">isPositiveNumber</span><span class="p">(</span><span class="nv">$inputData</span><span class="p">);</span>
</span><span class='line'>    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertEquals</span><span class="p">(</span><span class="nv">$expectedResult</span><span class="p">,</span> <span class="nv">$result</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="sd">/**</span>
</span><span class='line'><span class="sd"> * @return array</span>
</span><span class='line'><span class="sd"> */</span>
</span><span class='line'><span class="k">public</span> <span class="k">function</span> <span class="nf">isPositiveNumberProvider</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">array</span><span class="p">(</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="k">true</span><span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="k">false</span><span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="k">false</span><span class="p">)</span>
</span><span class='line'>    <span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>Кажется мы нашли решение для всего и плодим тесты одни за другим&hellip;</p>

<h3>Простота &ndash; залог успеха</h3>

<p>Написав первую главу, я понял, что не могу придумать адекватный пример для второй. А по ощущениям, я большую часть жизни так писал. Несколько дней искал объяснение этому факту. Пришел к выводу, что наш код со временем стал чище, и такие тесты практически вымерли.</p>

<p>Отступление&hellip; В день выпуска статьи у меня был небольшой митинг с коллегой, который завершился словами: &ldquo;Если разбить метод на три, как я предложил, то и с тестированием проблем не будет&rdquo;. Не могу утверждать, что мои слова действительно помогут, но они заставили меня еще раз задуматься о необходимости писать тесты.</p>

<p>Беря любой старый пример, я понимаю, что можно было написать по-другому. Или, как я недавно начал говорить, &ldquo;выпендриться&rdquo; и написать код мечты. Поэтому придется пойти на откровения дальше, взяв не самый хороший код из жизни.</p>

<h3>Юнит тесты поздней осенью</h3>

<p>Утро, поздняя осень, за окном холодно и темно. Вы приходите на работу в часов эдак семь или раньше. Идете на кухню, наливаете себе кофе, медленно и молчаливо пьете, с коллегой, девушкой, думая о том, что надо бы написать к коду тест.</p>

<p>Когда-то и кто-то что-то написал, дальше всем миром это апгрейдили, апгрейдили, а вчера вам пришлось снова что-то туда добавить. При этом вы были уставший, и вам срать было на этот старый код. Да и сейчас, наверное, особенно отношение не изменилось, просто ночью проснулся профессионализм.</p>

<p>Медленно мысли о &ldquo;надо написать&rdquo; перерастают в &ldquo;как написать&rdquo;. В голове прокручиваются воспоминания о том, а что же делает код. У вас есть некие данные, из которых собирается какая-то сущность. При этом накладывается куча всевозможных &ldquo;бизнес&rdquo; ограничений на входную информацию. Что-то вроде сахар не может быть синим, а картошка не может доставлена в ресторан без лука, а помол кофе может быть лишь трех видов, а третий вид поставляется только из Африки. Вроде и валидация, а с другой стороны ничего стандартного не прикрепишь.</p>

<p>В итоге в отведенные два часа из трех вы вчера написали что-то наподобие этому, plain php.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'><span class="sd">/**</span>
</span><span class='line'><span class="sd"> * @param Model $model</span>
</span><span class='line'><span class="sd"> * @throws CustomException</span>
</span><span class='line'><span class="sd"> */</span>
</span><span class='line'><span class="k">protected</span> <span class="k">function</span> <span class="nf">checkSomethingRestrictions</span><span class="p">(</span><span class="nx">Model</span> <span class="nv">$model</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nv">$linkedModel</span> <span class="o">=</span> <span class="nv">$model</span><span class="o">-&gt;</span><span class="na">getLinkedModel</span><span class="p">();</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nv">$linkedModel</span> <span class="o">&amp;&amp;</span> <span class="nv">$model</span><span class="o">-&gt;</span><span class="na">hasSomething</span><span class="p">())</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">throw</span> <span class="k">new</span> <span class="nx">CustomException</span><span class="p">(</span><span class="s1">&#39;Failed 1&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//code - code - code</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nv">$model</span><span class="o">-&gt;</span><span class="na">isEnabled</span><span class="p">()</span> <span class="o">&amp;&amp;</span> <span class="nv">$something</span> <span class="o">==</span> <span class="k">false</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">throw</span> <span class="k">new</span> <span class="nx">CustomException</span><span class="p">(</span><span class="s1">&#39;Failed 17&#39;</span><span class="p">,</span> <span class="mi">17</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>Проснувшись и преодолев чувство стыда за написанное, вы пишите быстренько тест.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'><span class="sd">/**</span>
</span><span class='line'><span class="sd"> * @test</span>
</span><span class='line'><span class="sd"> * @dataProvider checkSomethingRestrictionsProvider</span>
</span><span class='line'><span class="sd"> *</span>
</span><span class='line'><span class="sd"> * @param string $modelReference</span>
</span><span class='line'><span class="sd"> * @param string $exceptionMessage</span>
</span><span class='line'><span class="sd"> * @param integer|null $exceptionCode</span>
</span><span class='line'><span class="sd"> */</span>
</span><span class='line'><span class="k">public</span> <span class="k">function</span> <span class="nf">checkSomethingRestrictions</span><span class="p">(</span><span class="nv">$modelReference</span><span class="p">,</span> <span class="nv">$exceptionMessage</span> <span class="o">=</span> <span class="k">null</span><span class="p">,</span> <span class="nv">$exceptionCode</span> <span class="o">=</span> <span class="k">null</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nv">$exceptionMessage</span> <span class="o">!==</span> <span class="k">null</span> <span class="o">||</span> <span class="nv">$exceptionCode</span> <span class="o">!==</span> <span class="k">null</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">setExpectedException</span><span class="p">(</span><span class="s1">&#39;CustomException&#39;</span><span class="p">,</span> <span class="nv">$exceptionMessage</span><span class="p">,</span> <span class="nv">$exceptionCode</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nv">$model</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">referenceRepository</span><span class="o">-&gt;</span><span class="na">getReference</span><span class="p">(</span><span class="nv">$modelReference</span><span class="p">);</span>
</span><span class='line'>    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">uut</span><span class="o">-&gt;</span><span class="na">checkSomethingRestrictions</span><span class="p">(</span><span class="nv">$model</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="sd">/**</span>
</span><span class='line'><span class="sd"> * @return array</span>
</span><span class='line'><span class="sd"> */</span>
</span><span class='line'><span class="k">public</span> <span class="k">function</span> <span class="nf">checkSomethingRestrictionsProvider</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">array</span><span class="p">(</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="s1">&#39;model_1&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="s1">&#39;model_2&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="s1">&#39;model_3&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="s1">&#39;model_4&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="s1">&#39;model_5&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="s1">&#39;model_6&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="s1">&#39;model_7&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="s1">&#39;model_8&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="s1">&#39;model_9&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="s1">&#39;invalid_model_1&#39;</span><span class="p">,</span> <span class="s1">&#39;Failed 1&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="s1">&#39;invalid_model_2&#39;</span><span class="p">,</span> <span class="s1">&#39;Failed 2&#39;</span><span class="p">,</span> <span class="mi">2</span><span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="s1">&#39;invalid_model_3&#39;</span><span class="p">,</span> <span class="s1">&#39;Failed 3&#39;</span><span class="p">,</span> <span class="mi">3</span><span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="s1">&#39;invalid_model_5&#39;</span><span class="p">,</span> <span class="s1">&#39;Failed 5&#39;</span><span class="p">,</span> <span class="mi">5</span><span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="s1">&#39;invalid_model_4&#39;</span><span class="p">,</span> <span class="s1">&#39;Failed 4&#39;</span><span class="p">,</span> <span class="mi">4</span><span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="s1">&#39;invalid_model_6&#39;</span><span class="p">,</span> <span class="s1">&#39;Failed 6&#39;</span><span class="p">,</span> <span class="mi">6</span><span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="s1">&#39;invalid_model_7&#39;</span><span class="p">,</span> <span class="s1">&#39;Failed 7&#39;</span><span class="p">,</span> <span class="mi">7</span><span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="s1">&#39;invalid_model_8&#39;</span><span class="p">,</span> <span class="s1">&#39;Failed 8&#39;</span><span class="p">,</span> <span class="mi">8</span><span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="s1">&#39;invalid_model_9&#39;</span><span class="p">,</span> <span class="s1">&#39;Failed 9&#39;</span><span class="p">,</span> <span class="mi">9</span><span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="s1">&#39;invalid_model_10&#39;</span><span class="p">,</span> <span class="s1">&#39;Failed 10&#39;</span><span class="p">,</span> <span class="mi">10</span><span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="s1">&#39;invalid_model_11&#39;</span><span class="p">,</span> <span class="s1">&#39;Failed 11&#39;</span><span class="p">,</span> <span class="mi">11</span><span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="s1">&#39;invalid_model_12&#39;</span><span class="p">,</span> <span class="s1">&#39;Failed 12&#39;</span><span class="p">,</span> <span class="mi">12</span><span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="s1">&#39;invalid_model_13&#39;</span><span class="p">,</span> <span class="s1">&#39;Failed 13&#39;</span><span class="p">,</span> <span class="mi">13</span><span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="s1">&#39;invalid_model_14&#39;</span><span class="p">,</span> <span class="s1">&#39;Failed 14&#39;</span><span class="p">,</span> <span class="mi">14</span><span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="s1">&#39;invalid_model_15&#39;</span><span class="p">,</span> <span class="s1">&#39;Failed 15&#39;</span><span class="p">,</span> <span class="mi">15</span><span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="s1">&#39;invalid_model_16&#39;</span><span class="p">,</span> <span class="s1">&#39;Failed 16&#39;</span><span class="p">,</span> <span class="mi">16</span><span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="s1">&#39;invalid_model_17&#39;</span><span class="p">,</span> <span class="s1">&#39;Failed 17&#39;</span><span class="p">,</span> <span class="mi">17</span><span class="p">)</span>
</span><span class='line'>    <span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>Конечно, слово &ldquo;быстро&rdquo; не совсем к месту. Создали кучу фикстур для тестирования различных ситуаций и закомитили.</p>

<p>К сожалению, пример попал в 7 или 8 из 10. Имена переменных вымышленные, но размер дата провайдера совершенно реален.</p>

<p>Тут самое время вернуться к статье о <a href="fightmaster.github.io/blog/2013/09/25/code-review.html">код ревью</a>. Система код ревью &ndash; это машина будущего, она переносит ваших коллег на полгода вперед, тем самым предоставляя возможность изменить ход событий, избежать тупления над кодом и тестом.</p>

<blockquote><p>При написании кода мы стараемся дать сразу понять: что делает метод, что возвращает, что хранит переменная и т.д.. </p><p>При написании теста мы стараемся показать сразу: что тестируем и какую ситуацию описывают входные данные и т.д..</p><footer><strong>fightmaster</strong> <cite><a href='http://fightmaster.github.io/blog/2013/09/23/unit-tests.html'>fightmaster.github.io/blog/2013/&hellip;</a></cite></footer></blockquote>


<p>И правда, а что тестируется в итоге? Вот упадет через полгода код на 15 варианте дата провайдера, и чем мне это поможет? Название какой-то фикстуры (о хорошем тоне именования фикстур в следующей серии) ни о чем нам не скажет. Ну пойдем, откроем ее, а дальше что? А вдруг Петя ее поменял, а за ним Саша. А кто из них был не прав? А вдруг в нашей системе изменились требования, и именно этот тест теперь не должен падать при таких условиях. В обшем ничерта непонятно.</p>

<p>Вторая сторона, это добавить что-то в тест. Мы не знаем куда именно добавлять наш вариант. Все равно куда &ndash; не дело. А может наш вариант уже добавлен?</p>

<p>Первое и самое простое, что приходит в голову, оставить просто пояснения, в двух или трех словах выражающие особенность этого кейса.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'>
</span><span class='line'><span class="sd">/**</span>
</span><span class='line'><span class="sd"> * @return array</span>
</span><span class='line'><span class="sd"> */</span>
</span><span class='line'><span class="k">public</span> <span class="k">function</span> <span class="nf">checkSomethingRestrictionsProvider</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">array</span><span class="p">(</span>
</span><span class='line'>        <span class="c1">// model 1, pass</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="s1">&#39;model_1&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="c1">// model 2, pass</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="s1">&#39;model_2&#39;</span><span class="p">),</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// code</span>
</span><span class='line'>        <span class="c1">// code</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="s1">&#39;model_7&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="c1">// model 8, pass</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="s1">&#39;model_8&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="c1">// model 9, pass</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="s1">&#39;model_9&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="c1">// model 1, unknown attribute, fail</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="s1">&#39;invalid_model_1&#39;</span><span class="p">,</span> <span class="s1">&#39;Failed 1&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">),</span>
</span><span class='line'>        <span class="c1">// model 2, unknown name, fail</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="s1">&#39;invalid_model_2&#39;</span><span class="p">,</span> <span class="s1">&#39;Failed 2&#39;</span><span class="p">,</span> <span class="mi">2</span><span class="p">),</span>
</span><span class='line'>        <span class="c1">// model 3, no assign balck color, fail</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="s1">&#39;invalid_model_3&#39;</span><span class="p">,</span> <span class="s1">&#39;Failed 3&#39;</span><span class="p">,</span> <span class="mi">3</span><span class="p">),</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// code</span>
</span><span class='line'>        <span class="c1">// code</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// model 16, unknown name, fail</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="s1">&#39;invalid_model_16&#39;</span><span class="p">,</span> <span class="s1">&#39;Failed 16&#39;</span><span class="p">,</span> <span class="mi">16</span><span class="p">),</span>
</span><span class='line'>        <span class="c1">// product WITH color specified, fail</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="s1">&#39;invalid_model_17&#39;</span><span class="p">,</span> <span class="s1">&#39;Failed 17&#39;</span><span class="p">,</span> <span class="mi">17</span><span class="p">)</span>
</span><span class='line'>    <span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>Теперь мы хотя бы знаем, что хотели сказать авторы. Поддерживать тест теперь намного проще, порог вхождения в код сокращен.</p>

<h3>Бесконечность параметров</h3>

<p>В первых строках этой главы я завис на несколько минут. Все дело в том, что я очень редко вижу методы с большим набором входных параметров. Все знают, что это имеет плачевные последствия, и никто так не пишет нынче. Но почему-то все забывают эти правила при написании тестов. Мне кажется это феномен. Я наблюдал это в других проектах. Да, и где-то в глубине души существует искра надежды, что вы делали также.</p>

<p>Чаще всего в тесте нам нужно сконфигурировать определенную ситуацию. В предыдущей главе это достигалось с помощью фикстур. Часто используются моки или даже сами объекты, последнее конечно неправильно. Но в данных примерах именно они и будут. Так как работа с мок объектами &ndash; это целое искуство, и я не хочу все смешивать.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'><span class="sd">/**</span>
</span><span class='line'><span class="sd"> * @test</span>
</span><span class='line'><span class="sd"> * @backupGlobals enabled</span>
</span><span class='line'><span class="sd"> * @dataProvider getGlobalsProvider</span>
</span><span class='line'><span class="sd"> * </span>
</span><span class='line'><span class="sd"> * @param boolean $a</span>
</span><span class='line'><span class="sd"> * @param boolean $b</span>
</span><span class='line'><span class="sd"> * @param array $expectedResult</span>
</span><span class='line'><span class="sd"> */</span>
</span><span class='line'><span class="k">public</span> <span class="k">function</span> <span class="nf">getGlobals</span><span class="p">(</span><span class="nv">$a</span><span class="p">,</span> <span class="nv">$b</span><span class="p">,</span> <span class="nv">$expectedResult</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nv">$GLOBALS</span><span class="p">[</span><span class="s1">&#39;a&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$a</span><span class="p">;</span>
</span><span class='line'>    <span class="nv">$GLOBALS</span><span class="p">[</span><span class="s1">&#39;b&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$b</span><span class="p">;</span>
</span><span class='line'>    <span class="nv">$result</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">uut</span><span class="o">-&gt;</span><span class="na">getGlobals</span><span class="p">();</span>
</span><span class='line'>    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertSame</span><span class="p">(</span><span class="nv">$expectedResult</span><span class="p">,</span> <span class="nv">$result</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="sd">/**</span>
</span><span class='line'><span class="sd"> * @return array</span>
</span><span class='line'><span class="sd"> */</span>
</span><span class='line'><span class="k">public</span> <span class="k">function</span> <span class="nf">getGlobalsProvider</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">array</span><span class="p">(</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="k">true</span><span class="p">,</span> <span class="k">true</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;a_value&#39;</span> <span class="o">=&gt;</span> <span class="k">true</span><span class="p">,</span> <span class="s1">&#39;b_value&#39;</span> <span class="o">=&gt;</span> <span class="k">true</span><span class="p">)),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="k">true</span><span class="p">,</span> <span class="k">false</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;a_value&#39;</span> <span class="o">=&gt;</span> <span class="k">true</span><span class="p">,</span> <span class="s1">&#39;b_value&#39;</span> <span class="o">=&gt;</span> <span class="k">false</span><span class="p">)),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="k">false</span><span class="p">,</span> <span class="k">true</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;a_value&#39;</span> <span class="o">=&gt;</span> <span class="k">false</span><span class="p">,</span> <span class="s1">&#39;b_value&#39;</span> <span class="o">=&gt;</span> <span class="k">true</span><span class="p">)),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="k">false</span><span class="p">,</span> <span class="k">false</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;a_value&#39;</span> <span class="o">=&gt;</span> <span class="k">false</span><span class="p">,</span> <span class="s1">&#39;b_value&#39;</span> <span class="o">=&gt;</span> <span class="k">false</span><span class="p">)),</span>
</span><span class='line'>    <span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>Такой вот незамысловатый пример. Через некоторое время использование дата провайдера таким образом превращается в привычку. И в результате&hellip;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'><span class="sd">/**</span>
</span><span class='line'><span class="sd"> * @test</span>
</span><span class='line'><span class="sd"> * @dataProvider findBySearchMappingProvider</span>
</span><span class='line'><span class="sd"> *</span>
</span><span class='line'><span class="sd"> * @param string|null $color</span>
</span><span class='line'><span class="sd"> * @param string|null $size</span>
</span><span class='line'><span class="sd"> * @param integer|null $width</span>
</span><span class='line'><span class="sd"> * @param integer|null $length</span>
</span><span class='line'><span class="sd"> * @param integer|null $height</span>
</span><span class='line'><span class="sd"> * @param boolean|null $enabled</span>
</span><span class='line'><span class="sd"> * @param array $expectedReferences</span>
</span><span class='line'><span class="sd"> * @param integer $expectedResultCount</span>
</span><span class='line'><span class="sd"> */</span>
</span><span class='line'><span class="k">public</span> <span class="k">function</span> <span class="nf">findBySearchMapping</span><span class="p">(</span><span class="nv">$color</span><span class="p">,</span> <span class="nv">$size</span><span class="p">,</span> <span class="nv">$width</span><span class="p">,</span> <span class="nv">$length</span><span class="p">,</span> <span class="nv">$height</span><span class="p">,</span> <span class="nv">$enabled</span><span class="p">,</span> <span class="nv">$expectedReferences</span><span class="p">,</span> <span class="nv">$expectedResultCount</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nv">$expectedResults</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>
</span><span class='line'>    <span class="k">foreach</span> <span class="p">(</span><span class="nv">$expectedReferences</span> <span class="k">as</span> <span class="nv">$referenceName</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nv">$expectedResults</span><span class="p">[]</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">referenceRepository</span><span class="o">-&gt;</span><span class="na">getReference</span><span class="p">(</span><span class="nv">$referenceName</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nv">$searchMapping</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">SearchMapping</span><span class="p">();</span>
</span><span class='line'>    <span class="nv">$searchMapping</span><span class="o">-&gt;</span><span class="na">setColor</span><span class="p">(</span><span class="nv">$color</span><span class="p">)</span>
</span><span class='line'>        <span class="o">-&gt;</span><span class="na">setSize</span><span class="p">(</span><span class="nv">$size</span><span class="p">)</span>
</span><span class='line'>        <span class="o">-&gt;</span><span class="na">setWidth</span><span class="p">(</span><span class="nv">$width</span><span class="p">)</span>
</span><span class='line'>        <span class="o">-&gt;</span><span class="na">setLength</span><span class="p">(</span><span class="nv">$length</span><span class="p">)</span>
</span><span class='line'>        <span class="o">-&gt;</span><span class="na">setHeight</span><span class="p">(</span><span class="nv">$height</span><span class="p">)</span>
</span><span class='line'>        <span class="o">-&gt;</span><span class="na">setEnabled</span><span class="p">(</span><span class="nv">$enabled</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="nv">$results</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">uut</span><span class="o">-&gt;</span><span class="na">findBySearchMapping</span><span class="p">(</span><span class="nv">$searchMapping</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertCount</span><span class="p">(</span><span class="nv">$expectedResultCount</span><span class="p">,</span> <span class="nv">$results</span><span class="p">);</span>
</span><span class='line'>    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertContainsOnlyInstancesOf</span><span class="p">(</span><span class="s1">&#39;SomeInterface&#39;</span><span class="p">,</span> <span class="nv">$results</span><span class="p">);</span>
</span><span class='line'>    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertEquals</span><span class="p">(</span><span class="nv">$expectedResults</span><span class="p">,</span> <span class="nv">$results</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="sd">/**</span>
</span><span class='line'><span class="sd"> * @return array</span>
</span><span class='line'><span class="sd"> */</span>
</span><span class='line'><span class="k">public</span> <span class="k">function</span> <span class="nf">findBySearchMappingProvider</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">array</span><span class="p">(</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;model_1&#39;</span><span class="p">,</span> <span class="s1">&#39;model_2&#39;</span><span class="p">,</span> <span class="s1">&#39;model_3&#39;</span><span class="p">,</span> <span class="s1">&#39;model_4&#39;</span><span class="p">,</span> <span class="s1">&#39;model_5&#39;</span><span class="p">,</span> <span class="s1">&#39;model_6&#39;</span><span class="p">),</span> <span class="mi">6</span><span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="s1">&#39;black&#39;</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;model_1&#39;</span><span class="p">),</span> <span class="mi">1</span><span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="s1">&#39;red&#39;</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;model_2&#39;</span><span class="p">),</span> <span class="mi">1</span><span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="s1">&#39;NOTEXIST&#39;</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">array</span><span class="p">(),</span> <span class="mi">0</span><span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="k">null</span><span class="p">,</span> <span class="s1">&#39;XL&#39;</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;model_1&#39;</span><span class="p">,</span> <span class="s1">&#39;model_2&#39;</span><span class="p">,</span> <span class="s1">&#39;model_3&#39;</span><span class="p">,</span> <span class="s1">&#39;model_4&#39;</span><span class="p">,</span> <span class="s1">&#39;model_6&#39;</span><span class="p">),</span> <span class="mi">5</span><span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="k">null</span><span class="p">,</span> <span class="s1">&#39;M&#39;</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;model_5&#39;</span><span class="p">),</span> <span class="mi">1</span><span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="s1">&#39;black&#39;</span><span class="p">,</span> <span class="s1">&#39;XL&#39;</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;model_1&#39;</span><span class="p">),</span> <span class="mi">1</span><span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="s1">&#39;black&#39;</span><span class="p">,</span> <span class="s1">&#39;M&#39;</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">array</span><span class="p">(),</span> <span class="mi">0</span><span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="s1">&#39;black&#39;</span><span class="p">,</span> <span class="s1">&#39;XL&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">23</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">array</span><span class="p">(),</span> <span class="mi">0</span><span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">true</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;model_1&#39;</span><span class="p">,</span> <span class="s1">&#39;model_3&#39;</span><span class="p">,</span> <span class="s1">&#39;model_4&#39;</span><span class="p">,</span> <span class="s1">&#39;model_5&#39;</span><span class="p">,</span> <span class="s1">&#39;model_6&#39;</span><span class="p">),</span> <span class="mi">5</span><span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">false</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;model_2&#39;</span><span class="p">),</span> <span class="mi">1</span><span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;model_3&#39;</span><span class="p">),</span> <span class="mi">1</span><span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="mi">1000</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">array</span><span class="p">(),</span> <span class="mi">0</span><span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;model_1&#39;</span><span class="p">,</span> <span class="s1">&#39;model_6&#39;</span><span class="p">),</span> <span class="mi">2</span><span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="mi">100</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">array</span><span class="p">(),</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>Когда это видишь первый раз на ревью, сначала прощаешь или не придаешь значение. Но команда &ndash; это лавина, особенно, если задание в релизе способствует появлению таких провайдеров. Иногда количество параметров достигало до 15. И в какой-то момент понимаешь, что надо брать ситуацию под контроль. Это осознание усиливается, когда в одном PR (Pull Request) несколько таких примеров. Что же делать?</p>

<p>Естественно, сначала оставляем комментарии, что-то вроде такого.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'><span class="sd">/**</span>
</span><span class='line'><span class="sd"> * @return array</span>
</span><span class='line'><span class="sd"> */</span>
</span><span class='line'><span class="k">public</span> <span class="k">function</span> <span class="nf">findBySearchMappingProvider</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">array</span><span class="p">(</span>
</span><span class='line'>        <span class="c1">//$color, $size, $width, $length, $height, $enabled, $expectedReferences, $expectedResultCount</span>
</span><span class='line'>        <span class="c1">//find all models</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;model_1&#39;</span><span class="p">,</span> <span class="s1">&#39;model_2&#39;</span><span class="p">,</span> <span class="s1">&#39;model_3&#39;</span><span class="p">,</span> <span class="s1">&#39;model_4&#39;</span><span class="p">,</span> <span class="s1">&#39;model_5&#39;</span><span class="p">,</span> <span class="s1">&#39;model_6&#39;</span><span class="p">),</span> <span class="mi">6</span><span class="p">),</span>
</span><span class='line'>        <span class="c1">//find models by the color</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="s1">&#39;black&#39;</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;model_1&#39;</span><span class="p">),</span> <span class="mi">1</span><span class="p">),</span>
</span><span class='line'>        <span class="c1">//find models by the color</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="s1">&#39;red&#39;</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;model_2&#39;</span><span class="p">),</span> <span class="mi">1</span><span class="p">),</span>
</span><span class='line'>        <span class="c1">//trying find models by the non-existent color</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="s1">&#39;NOTEXIST&#39;</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">array</span><span class="p">(),</span> <span class="mi">0</span><span class="p">),</span>
</span><span class='line'>        <span class="c1">//find models by the size</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="k">null</span><span class="p">,</span> <span class="s1">&#39;XL&#39;</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;model_1&#39;</span><span class="p">,</span> <span class="s1">&#39;model_2&#39;</span><span class="p">,</span> <span class="s1">&#39;model_3&#39;</span><span class="p">,</span> <span class="s1">&#39;model_4&#39;</span><span class="p">,</span> <span class="s1">&#39;model_6&#39;</span><span class="p">),</span> <span class="mi">5</span><span class="p">),</span>
</span><span class='line'>        <span class="c1">//find models by the size</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span><span class="k">null</span><span class="p">,</span> <span class="s1">&#39;M&#39;</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;model_5&#39;</span><span class="p">),</span> <span class="mi">1</span><span class="p">),</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// code</span>
</span><span class='line'>        <span class="c1">// code</span>
</span><span class='line'>    <span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>Так как это минимум умственных и временных затрат для достижения компромисса между программистом и владельцем продукта.</p>

<h3>Не комментируйте плохой код — перепишете его.</h3>

<p>Спустя время мы нашли несколько решений. До сих пор у меня нет объяснения, почему они сразу не всплыли. Вспомним цитату выше. Нам нужно всего лишь показать, что мы хотим протестировать. А многочисленные <code>null</code> лишь говорят о том, что эти значения нас не интересуют для этого теста.</p>

<p>Воспользуемся советом дядюшки Боба.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'><span class="sd">/**</span>
</span><span class='line'><span class="sd"> * @return array</span>
</span><span class='line'><span class="sd"> */</span>
</span><span class='line'><span class="k">public</span> <span class="k">function</span> <span class="nf">findBySearchMappingProvider</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">array</span><span class="p">(</span>
</span><span class='line'>        <span class="c1">// find all models</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span>
</span><span class='line'>            <span class="k">array</span><span class="p">(),</span>
</span><span class='line'>            <span class="k">array</span><span class="p">(</span><span class="s1">&#39;model_1&#39;</span><span class="p">,</span> <span class="s1">&#39;model_2&#39;</span><span class="p">,</span> <span class="s1">&#39;model_3&#39;</span><span class="p">,</span> <span class="s1">&#39;model_4&#39;</span><span class="p">,</span> <span class="s1">&#39;model_5&#39;</span><span class="p">,</span> <span class="s1">&#39;model_6&#39;</span><span class="p">),</span>
</span><span class='line'>             <span class="mi">6</span>
</span><span class='line'>         <span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span>
</span><span class='line'>            <span class="k">array</span><span class="p">(</span><span class="s1">&#39;color&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;black&#39;</span><span class="p">),</span>
</span><span class='line'>            <span class="k">array</span><span class="p">(</span><span class="s1">&#39;model_1&#39;</span><span class="p">),</span>
</span><span class='line'>            <span class="mi">1</span>
</span><span class='line'>        <span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span>
</span><span class='line'>            <span class="k">array</span><span class="p">(</span><span class="s1">&#39;color&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;red&#39;</span><span class="p">),</span>
</span><span class='line'>            <span class="k">array</span><span class="p">(</span><span class="s1">&#39;model_2&#39;</span><span class="p">),</span>
</span><span class='line'>            <span class="mi">1</span>
</span><span class='line'>        <span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span>
</span><span class='line'>            <span class="k">array</span><span class="p">(</span><span class="s1">&#39;color&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;NOTEXIST&#39;</span><span class="p">),</span>
</span><span class='line'>            <span class="k">array</span><span class="p">(),</span>
</span><span class='line'>            <span class="mi">0</span>
</span><span class='line'>        <span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span>
</span><span class='line'>            <span class="k">array</span><span class="p">(</span><span class="s1">&#39;size&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;XL&#39;</span><span class="p">),</span>
</span><span class='line'>            <span class="k">array</span><span class="p">(</span><span class="s1">&#39;model_1&#39;</span><span class="p">,</span> <span class="s1">&#39;model_2&#39;</span><span class="p">,</span> <span class="s1">&#39;model_3&#39;</span><span class="p">,</span> <span class="s1">&#39;model_4&#39;</span><span class="p">,</span> <span class="s1">&#39;model_6&#39;</span><span class="p">),</span>
</span><span class='line'>            <span class="mi">5</span>
</span><span class='line'>        <span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span>
</span><span class='line'>            <span class="k">array</span><span class="p">(</span><span class="s1">&#39;size&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;M&#39;</span><span class="p">),</span>
</span><span class='line'>            <span class="k">array</span><span class="p">(</span><span class="s1">&#39;model_5&#39;</span><span class="p">),</span>
</span><span class='line'>            <span class="mi">1</span>
</span><span class='line'>        <span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span>
</span><span class='line'>            <span class="k">array</span><span class="p">(</span><span class="s1">&#39;color&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;black&#39;</span><span class="p">,</span> <span class="s1">&#39;size&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;XL&#39;</span><span class="p">),</span>
</span><span class='line'>            <span class="k">array</span><span class="p">(</span><span class="s1">&#39;model_1&#39;</span><span class="p">),</span>
</span><span class='line'>            <span class="mi">1</span>
</span><span class='line'>        <span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span>
</span><span class='line'>            <span class="k">array</span><span class="p">(</span><span class="s1">&#39;color&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;black&#39;</span><span class="p">,</span> <span class="s1">&#39;size&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;M&#39;</span><span class="p">),</span>
</span><span class='line'>            <span class="k">array</span><span class="p">(),</span>
</span><span class='line'>            <span class="mi">0</span>
</span><span class='line'>        <span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span>
</span><span class='line'>            <span class="k">array</span><span class="p">(</span><span class="s1">&#39;color&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;black&#39;</span><span class="p">,</span> <span class="s1">&#39;size&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;XL&#39;</span><span class="p">,</span> <span class="s1">&#39;width&#39;</span> <span class="o">=&gt;</span> <span class="mi">1</span><span class="p">,</span> <span class="s1">&#39;length&#39;</span> <span class="o">=&gt;</span><span class="p">,</span> <span class="s1">&#39;height&#39;</span> <span class="o">=&gt;</span> <span class="mi">23</span><span class="p">),</span>
</span><span class='line'>            <span class="k">array</span><span class="p">(),</span>
</span><span class='line'>            <span class="mi">0</span>
</span><span class='line'>        <span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span>
</span><span class='line'>            <span class="k">array</span><span class="p">(</span><span class="s1">&#39;enabled&#39;</span> <span class="o">=&gt;</span> <span class="k">true</span><span class="p">),</span>
</span><span class='line'>            <span class="k">array</span><span class="p">(</span><span class="s1">&#39;model_1&#39;</span><span class="p">,</span> <span class="s1">&#39;model_3&#39;</span><span class="p">,</span> <span class="s1">&#39;model_4&#39;</span><span class="p">,</span> <span class="s1">&#39;model_5&#39;</span><span class="p">,</span> <span class="s1">&#39;model_6&#39;</span><span class="p">),</span>
</span><span class='line'>            <span class="mi">5</span>
</span><span class='line'>        <span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span>
</span><span class='line'>            <span class="k">array</span><span class="p">(</span><span class="s1">&#39;enabled&#39;</span> <span class="o">=&gt;</span> <span class="k">false</span><span class="p">),</span>
</span><span class='line'>            <span class="k">array</span><span class="p">(</span><span class="s1">&#39;model_2&#39;</span><span class="p">),</span>
</span><span class='line'>            <span class="mi">1</span>
</span><span class='line'>        <span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span>
</span><span class='line'>            <span class="k">array</span><span class="p">(</span><span class="s1">&#39;length&#39;</span> <span class="o">=&gt;</span> <span class="mi">5</span><span class="p">),</span>
</span><span class='line'>            <span class="k">array</span><span class="p">(</span><span class="s1">&#39;model_3&#39;</span><span class="p">),</span>
</span><span class='line'>            <span class="mi">1</span>
</span><span class='line'>        <span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span>
</span><span class='line'>            <span class="k">array</span><span class="p">(</span><span class="s1">&#39;length&#39;</span> <span class="o">=&gt;</span> <span class="mi">1000</span><span class="p">),</span>
</span><span class='line'>            <span class="k">array</span><span class="p">(),</span>
</span><span class='line'>            <span class="mi">0</span>
</span><span class='line'>        <span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span>
</span><span class='line'>            <span class="k">array</span><span class="p">(</span><span class="s1">&#39;height&#39;</span> <span class="o">=&gt;</span> <span class="mi">1</span><span class="p">),</span>
</span><span class='line'>            <span class="k">array</span><span class="p">(</span><span class="s1">&#39;model_1&#39;</span><span class="p">,</span> <span class="s1">&#39;model_6&#39;</span><span class="p">),</span>
</span><span class='line'>            <span class="mi">2</span>
</span><span class='line'>        <span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span>
</span><span class='line'>            <span class="k">array</span><span class="p">(</span><span class="s1">&#39;height&#39;</span> <span class="o">=&gt;</span> <span class="mi">100</span><span class="p">),</span>
</span><span class='line'>            <span class="k">array</span><span class="p">(),</span>
</span><span class='line'>            <span class="mi">0</span>
</span><span class='line'>        <span class="p">)</span>
</span><span class='line'>    <span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>Вуаля, ассоциативные массивы спасают этот мир. Ключ массива выступает в роли комментария, и необходимость онного чаще всего излишне теперь (хотя НЕ всегда). Осталось теперь поправить сам код теста.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'><span class="sd">/**</span>
</span><span class='line'><span class="sd"> * @test</span>
</span><span class='line'><span class="sd"> * @dataProvider findBySearchMappingProvider</span>
</span><span class='line'><span class="sd"> *</span>
</span><span class='line'><span class="sd"> * @param array $dataMapping</span>
</span><span class='line'><span class="sd"> * @param array $expectedReferences</span>
</span><span class='line'><span class="sd"> * @param integer $expectedResultCount</span>
</span><span class='line'><span class="sd"> */</span>
</span><span class='line'><span class="k">public</span> <span class="k">function</span> <span class="nf">findBySearchMapping</span><span class="p">(</span><span class="nv">$mappingData</span><span class="p">,</span> <span class="nv">$expectedReferences</span><span class="p">,</span> <span class="nv">$expectedResultCount</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nv">$expectedResults</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>
</span><span class='line'>    <span class="k">foreach</span> <span class="p">(</span><span class="nv">$expectedReferences</span> <span class="k">as</span> <span class="nv">$referenceName</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nv">$expectedResults</span><span class="p">[]</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">referenceRepository</span><span class="o">-&gt;</span><span class="na">getReference</span><span class="p">(</span><span class="nv">$referenceName</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nv">$searchMapping</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">SearchMapping</span><span class="p">();</span>
</span><span class='line'>    <span class="nv">$searchMapping</span><span class="o">-&gt;</span><span class="na">setColor</span><span class="p">(</span><span class="nb">isset</span><span class="p">(</span><span class="nv">$mappingData</span><span class="p">[</span><span class="s1">&#39;color&#39;</span><span class="p">])</span> <span class="o">?</span> <span class="nv">$mappingData</span><span class="p">[</span><span class="s1">&#39;color&#39;</span><span class="p">]</span> <span class="o">:</span> <span class="k">null</span><span class="p">)</span>
</span><span class='line'>        <span class="o">-&gt;</span><span class="na">setSize</span><span class="p">(</span><span class="nb">isset</span><span class="p">(</span><span class="nv">$mappingData</span><span class="p">[</span><span class="s1">&#39;size&#39;</span><span class="p">])</span> <span class="o">?</span> <span class="nv">$mappingData</span><span class="p">[</span><span class="s1">&#39;size&#39;</span><span class="p">]</span> <span class="o">:</span> <span class="k">null</span><span class="p">)</span>
</span><span class='line'>        <span class="o">-&gt;</span><span class="na">setWidth</span><span class="p">(</span><span class="nb">isset</span><span class="p">(</span><span class="nv">$mappingData</span><span class="p">[</span><span class="s1">&#39;width&#39;</span><span class="p">])</span> <span class="o">?</span> <span class="nv">$mappingData</span><span class="p">[</span><span class="s1">&#39;width&#39;</span><span class="p">]</span> <span class="o">:</span> <span class="k">null</span><span class="p">)</span>
</span><span class='line'>        <span class="o">-&gt;</span><span class="na">setLength</span><span class="p">(</span><span class="nb">isset</span><span class="p">(</span><span class="nv">$mappingData</span><span class="p">[</span><span class="s1">&#39;length&#39;</span><span class="p">])</span> <span class="o">?</span> <span class="nv">$mappingData</span><span class="p">[</span><span class="s1">&#39;length&#39;</span><span class="p">]</span> <span class="o">:</span> <span class="k">null</span><span class="p">)</span>
</span><span class='line'>        <span class="o">-&gt;</span><span class="na">setHeight</span><span class="p">(</span><span class="nb">isset</span><span class="p">(</span><span class="nv">$mappingData</span><span class="p">[</span><span class="s1">&#39;heigth&#39;</span><span class="p">])</span> <span class="o">?</span> <span class="nv">$mappingData</span><span class="p">[</span><span class="s1">&#39;height&#39;</span><span class="p">]</span> <span class="o">:</span> <span class="k">null</span><span class="p">)</span>
</span><span class='line'>        <span class="o">-&gt;</span><span class="na">setEnabled</span><span class="p">(</span><span class="nb">isset</span><span class="p">(</span><span class="nv">$mappingData</span><span class="p">[</span><span class="s1">&#39;enabled&#39;</span><span class="p">])</span> <span class="o">?</span> <span class="nv">$mappingData</span><span class="p">[</span><span class="s1">&#39;enabled&#39;</span><span class="p">]</span> <span class="o">:</span> <span class="k">null</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="nv">$results</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">uut</span><span class="o">-&gt;</span><span class="na">findBySearchMapping</span><span class="p">(</span><span class="nv">$searchMapping</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertCount</span><span class="p">(</span><span class="nv">$expectedResultCount</span><span class="p">,</span> <span class="nv">$results</span><span class="p">);</span>
</span><span class='line'>    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertContainsOnlyInstancesOf</span><span class="p">(</span><span class="s1">&#39;SomeInterface&#39;</span><span class="p">,</span> <span class="nv">$results</span><span class="p">);</span>
</span><span class='line'>    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertEquals</span><span class="p">(</span><span class="nv">$expectedResults</span><span class="p">,</span> <span class="nv">$results</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<h3>Рефакторинг</h3>

<p>Но негоже оставлять в таком виде тест, вдруг кто-то решит взять на заметку этот совет.</p>

<p>Во-первых, блок, получающий ожидаемые объекты, един как минимум для этого тест кейса. Во-вторых, тоже самое можно сказать про создание конфигурируемого объекта. При этом чаще всего это мок объект, и он используется в других тестах. В-третьих, я ненавижу параметр $expectedCounts, тем более когда есть набор ожидаемых объектов.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'><span class="sd">/**</span>
</span><span class='line'><span class="sd"> * @test</span>
</span><span class='line'><span class="sd"> * @dataProvider findBySearchMappingProvider</span>
</span><span class='line'><span class="sd"> *</span>
</span><span class='line'><span class="sd"> * @param array $dataMapping</span>
</span><span class='line'><span class="sd"> * @param array $expectedReferences</span>
</span><span class='line'><span class="sd"> */</span>
</span><span class='line'><span class="k">public</span> <span class="k">function</span> <span class="nf">findBySearchMapping</span><span class="p">(</span><span class="k">array</span> <span class="nv">$mappingData</span><span class="p">,</span> <span class="k">array</span> <span class="nv">$expectedReferences</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nv">$expectedResults</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getSomethingByReferences</span><span class="p">(</span><span class="nv">$expectedReferences</span><span class="p">);</span>
</span><span class='line'>    <span class="nv">$searchMapping</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getSearchMapping</span><span class="p">(</span><span class="nv">$mappingData</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="nv">$results</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">uut</span><span class="o">-&gt;</span><span class="na">findBySearchMapping</span><span class="p">(</span><span class="nv">$searchMapping</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertCount</span><span class="p">(</span><span class="nb">count</span><span class="p">(</span><span class="nv">$expectedResults</span><span class="p">),</span> <span class="nv">$results</span><span class="p">);</span>
</span><span class='line'>    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertContainsOnlyInstancesOf</span><span class="p">(</span><span class="s1">&#39;SomeInterface&#39;</span><span class="p">,</span> <span class="nv">$results</span><span class="p">);</span>
</span><span class='line'>    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertEquals</span><span class="p">(</span><span class="nv">$expectedResults</span><span class="p">,</span> <span class="nv">$results</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="sd">/**</span>
</span><span class='line'><span class="sd"> * @return array</span>
</span><span class='line'><span class="sd"> */</span>
</span><span class='line'><span class="k">public</span> <span class="k">function</span> <span class="nf">findBySearchMappingProvider</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">array</span><span class="p">(</span>
</span><span class='line'>        <span class="c1">// find all models</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span>
</span><span class='line'>            <span class="k">array</span><span class="p">(),</span>
</span><span class='line'>            <span class="k">array</span><span class="p">(</span><span class="s1">&#39;model_1&#39;</span><span class="p">,</span> <span class="s1">&#39;model_2&#39;</span><span class="p">,</span> <span class="s1">&#39;model_3&#39;</span><span class="p">,</span> <span class="s1">&#39;model_4&#39;</span><span class="p">,</span> <span class="s1">&#39;model_5&#39;</span><span class="p">,</span> <span class="s1">&#39;model_6&#39;</span><span class="p">)</span>
</span><span class='line'>         <span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span>
</span><span class='line'>            <span class="k">array</span><span class="p">(</span><span class="s1">&#39;color&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;black&#39;</span><span class="p">),</span>
</span><span class='line'>            <span class="k">array</span><span class="p">(</span><span class="s1">&#39;model_1&#39;</span><span class="p">)</span>
</span><span class='line'>        <span class="p">),</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">//code</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span>
</span><span class='line'>            <span class="k">array</span><span class="p">(</span><span class="s1">&#39;color&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;black&#39;</span><span class="p">,</span> <span class="s1">&#39;size&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;XL&#39;</span><span class="p">,</span> <span class="s1">&#39;width&#39;</span> <span class="o">=&gt;</span> <span class="mi">1</span><span class="p">,</span> <span class="s1">&#39;length&#39;</span> <span class="o">=&gt;</span><span class="p">,</span> <span class="s1">&#39;height&#39;</span> <span class="o">=&gt;</span> <span class="mi">23</span><span class="p">),</span>
</span><span class='line'>            <span class="k">array</span><span class="p">()</span>
</span><span class='line'>        <span class="p">),</span>
</span><span class='line'>        <span class="k">array</span><span class="p">(</span>
</span><span class='line'>            <span class="k">array</span><span class="p">(</span><span class="s1">&#39;enabled&#39;</span> <span class="o">=&gt;</span> <span class="k">true</span><span class="p">),</span>
</span><span class='line'>            <span class="k">array</span><span class="p">(</span><span class="s1">&#39;model_1&#39;</span><span class="p">,</span> <span class="s1">&#39;model_3&#39;</span><span class="p">,</span> <span class="s1">&#39;model_4&#39;</span><span class="p">,</span> <span class="s1">&#39;model_5&#39;</span><span class="p">,</span> <span class="s1">&#39;model_6&#39;</span><span class="p">)</span>
</span><span class='line'>        <span class="p">),</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">//code</span>
</span><span class='line'>    <span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="sd">/**</span>
</span><span class='line'><span class="sd"> * @param array $references</span>
</span><span class='line'><span class="sd"> * @return SomeInterface[]</span>
</span><span class='line'><span class="sd"> */</span>
</span><span class='line'><span class="k">private</span> <span class="k">function</span> <span class="nf">getSomethingByReferences</span><span class="p">(</span><span class="k">array</span> <span class="nv">$references</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="nv">$models</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>
</span><span class='line'>    <span class="k">foreach</span> <span class="p">(</span><span class="nv">$references</span> <span class="k">as</span> <span class="nv">$referenceName</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nv">$models</span><span class="p">[]</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">referenceRepository</span><span class="o">-&gt;</span><span class="na">getReference</span><span class="p">(</span><span class="nv">$referenceName</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="nv">$models</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="sd">/**</span>
</span><span class='line'><span class="sd"> * @param array $mappingData</span>
</span><span class='line'><span class="sd"> * @return SearchMapping</span>
</span><span class='line'><span class="sd"> */</span>
</span><span class='line'><span class="k">private</span> <span class="k">function</span> <span class="nf">getSearchMapping</span><span class="p">(</span><span class="k">array</span> <span class="nv">$mappingData</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nv">$searchMapping</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">SearchMapping</span><span class="p">();</span>
</span><span class='line'>    <span class="nv">$searchMapping</span><span class="o">-&gt;</span><span class="na">setColor</span><span class="p">(</span><span class="nb">isset</span><span class="p">(</span><span class="nv">$mappingData</span><span class="p">[</span><span class="s1">&#39;color&#39;</span><span class="p">])</span> <span class="o">?</span> <span class="nv">$mappingData</span><span class="p">[</span><span class="s1">&#39;color&#39;</span><span class="p">]</span> <span class="o">:</span> <span class="k">null</span><span class="p">)</span>
</span><span class='line'>        <span class="o">-&gt;</span><span class="na">setSize</span><span class="p">(</span><span class="nb">isset</span><span class="p">(</span><span class="nv">$mappingData</span><span class="p">[</span><span class="s1">&#39;size&#39;</span><span class="p">])</span> <span class="o">?</span> <span class="nv">$mappingData</span><span class="p">[</span><span class="s1">&#39;size&#39;</span><span class="p">]</span> <span class="o">:</span> <span class="k">null</span><span class="p">)</span>
</span><span class='line'>        <span class="o">-&gt;</span><span class="na">setWidth</span><span class="p">(</span><span class="nb">isset</span><span class="p">(</span><span class="nv">$mappingData</span><span class="p">[</span><span class="s1">&#39;width&#39;</span><span class="p">])</span> <span class="o">?</span> <span class="nv">$mappingData</span><span class="p">[</span><span class="s1">&#39;width&#39;</span><span class="p">]</span> <span class="o">:</span> <span class="k">null</span><span class="p">)</span>
</span><span class='line'>        <span class="o">-&gt;</span><span class="na">setLength</span><span class="p">(</span><span class="nb">isset</span><span class="p">(</span><span class="nv">$mappingData</span><span class="p">[</span><span class="s1">&#39;length&#39;</span><span class="p">])</span> <span class="o">?</span> <span class="nv">$mappingData</span><span class="p">[</span><span class="s1">&#39;length&#39;</span><span class="p">]</span> <span class="o">:</span> <span class="k">null</span><span class="p">)</span>
</span><span class='line'>        <span class="o">-&gt;</span><span class="na">setHeight</span><span class="p">(</span><span class="nb">isset</span><span class="p">(</span><span class="nv">$mappingData</span><span class="p">[</span><span class="s1">&#39;heigth&#39;</span><span class="p">])</span> <span class="o">?</span> <span class="nv">$mappingData</span><span class="p">[</span><span class="s1">&#39;height&#39;</span><span class="p">]</span> <span class="o">:</span> <span class="k">null</span><span class="p">)</span>
</span><span class='line'>        <span class="o">-&gt;</span><span class="na">setEnabled</span><span class="p">(</span><span class="nb">isset</span><span class="p">(</span><span class="nv">$mappingData</span><span class="p">[</span><span class="s1">&#39;enabled&#39;</span><span class="p">])</span> <span class="o">?</span> <span class="nv">$mappingData</span><span class="p">[</span><span class="s1">&#39;enabled&#39;</span><span class="p">]</span> <span class="o">:</span> <span class="k">null</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<h3>Заключение</h3>

<p>Последний мой PR содержал data provider для сложного поиска c около 70 вариантами. И знаете, он выглядит &ldquo;удобоваримо&rdquo;. Я придерживаюсь такого правила, если, прокручивая провайдер колесиком мышки, вы все прекрасно понимаете &ndash; значит проверка на качество пройдена.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ohio River Greenway 5K]]></title>
    <link href="http://fightmaster.github.io/blog/2013/09/28/ohio-river-greenway-5-k.html"/>
    <updated>2013-09-28T23:50:00+04:00</updated>
    <id>http://fightmaster.github.io/blog/2013/09/28/ohio-river-greenway-5-k</id>
    <content type="html"><![CDATA[<p>В четверг взяли и зарегились на 7 благотворительный пробег, за два дня до старта.</p>

<!-- more -->


<p>Как я понимаю, в штатах существуют &ldquo;скопления маленьких городков&rdquo;, непрерывно связанных друг с другом. В них множество маленьких парков и скверов. Но вот конкретно в New Albany длительно побегать не очень и получится. Длина набережной где-то миля. По саму городу в разы приятнее бежать, нежели в Саратове. Людей на улице нет, если и встречаешь, то смотрят адекватно. Но отношение людей к бегу и к бегающим, другая тема. Машин нет и дышится легко. Проблема в том, что тротуар внезапно кончается, а маленькая дорога также внезапно превращается в 6 полос. При этом это может быть даже не хайвей, где пешеходам вообще запрещено находится. Но тем не менее, бежишь и думаешь, а можно ли тут бежать и немного неприятно от самой дороги.</p>

<p>На машине можно доехать тут до очень популярного для бега парка, но и там круг 5 км. Если вам надо побегать 15-20 км, это немного надоест. Да и машины у меня нет.</p>

<p>Небольшое отступление для велосипедистов из Саратова, в соседнем &ldquo;скоплении городков&rdquo; велодорожка тянется на сотни миль.</p>

<p>В общем родился проект, объединить 4 моста через Огайо пешеходно/беговой/велосипедной дорожкой вдоль реки, 3 городка. Длина этой дорожки 7.6 мили. На данный момент проект готов на процентов 75-80, по моим ощущениям. Избегал в разные дни процентов 60, очень понравилось. Действительно красивые виды на реку, дамбы, просто пробегаешь то по красивой набережной, то вдоль леса, то через парк, то по насыпному холму.</p>

<p>Самое обидное, что именно наш городок сейчас отрезан от львиной части маршрута. Не хватает мостика через почти засохшую речушку и 1 или 2 км асфальта.</p>

<p>Так вот, именно в поддержку строительства мы и собрались бежать. Я сто лет не участвовал в соревнованиях по бегу, а для друга это был вообще дебют.</p>

<p>Я совершенно не представлял как мне бежать. С приездом в штаты уделил большое внимание бегу. А потом еще нашел программу и подходящий план тренировок, направленный на увелечение скорости на дистанции полумарафона. Так как отсутствие скорости &ndash; самая большая моя проблема. Я могу бежать долго-долго сейчас с одной скоростью, при этом скорость от прежних тренировок никак не изменялась, увеличивалась лишь выносливость.</p>

<p>За неделю до старта у меня тренировка (первая в таком плане) состояла из 6 ускорений по 400 метров, с отдыхом по 3 минуты (медленный бег). Скорость на этих отрезках была: 3:18 мин/км, 3:58, 4:06, 4:32, 4:22, 3:58. При этом после 3 ускорения, я думал все бросить, так как сил не было.</p>

<p>За 3 дня до старта были снова ускорения, только 5 раз по 3 минуты. В среднем это было по 750 метров. На этот раз я был опытнее и подошел с умом и скорости были: 4:36, 4:42, 4:35, 4:37, 4:52. В минуты отдыха я бежал спокойно по 6:30-7:00. И средняя скорость вышла 5:30. Но при этом после каждого ускорения я очень сильно уставал, что и заметно на последнем отрезке.</p>

<p>Может и к лучшему, что мы зарегистрировались на соревнования в последний момент. Время на раздумья с какой скоростью бежать особо не было. Сначала я хотел попробовать бежать все 5 км с 5:30 мин/км. Потом подумал, что можно начать с 5 минутами и попробовать не умереть на финише. Я надеялся, что азарт соревнований положительно скажется на этом.</p>

<p>Традиционно вначале все рванули вперед, я постарался не гнаться за лидерами. Тем не менее все равно оказался где-то в первой двадцатке. Первый километр был пройден за 4:53. Передо мной была большая группа лидеров, которая дальше бежала с той же скоростью как и я. Совсем близко, в метрах 50 был мужчина. Рядом со мной бежала женщина и маленькая девочка. Таким составом мы начали медленно &ldquo;съедать&rdquo; соперников.</p>

<p>2 км мы пробежали за 5:11. Женщина стала прибавлять в скорости и немного оторвалась от меня, мне бежалось легко, и я подумал, почему бы не поддержать эту скорость. Группа лидеров стала рассыпаться постепенно. Перед нашими глазами мелькала вдали девушка, с детьми, а в метрах 100 парень. Его то мы и решили догнать к 3 км, преодолев его за 5:02. 3 км оканчивался небольшим подъемчиком и разворотом на финиш. Перед ним раздавали воду, я хлебнул глоток, остальное вылил на себя, так как становилось уже жарко. В этот подъем я и прибавил, догнав женщину и парня, оценив одновременно отставание от остальных, их состояние и мои шансы догнать их. В принципе, они все это время бежали не намного быстрее меня, и можно было догнать их за эти 2 км, главное самому ускориться.</p>

<p>Сначала я быстро настиг человек 3, и прошел их спокойно. Следующей целью был мальчик в метрах 50, отставший от основной группы. Я решил постепенно увеличивать скорость, чтобы не переборщить и не умереть к финишу. Так как мы бежали в обратную сторону, то теперь можно было махать, кивать, кричать что-то встречным. Это подняло мое настроение и, наверное, помогло обмануть организм, что он бежит уже на пределе своих возможностей.</p>

<p>Мальчик, узнав, что я его догоняю, решил сопротивляться, хотя и сил у него уже не было. Это лишь помогло еще взвентить мою скорость. Группа впереди уже хорошо рассыпалась, и мы к ней особо и не приблизились, даже мне казалось, что отдалились. В итоге 4 км был пройден за 4:49, а скорость на самом 4 км уже была 4:25 мин/км. Тем не менее, я хотел попробовать догнать группу из 3 человек: девушка, парень, мальчик. Уже выбигая на набережную (метров 750 до финиша), я понимаю, что парня накрыло и ему хреново уже. Это заметил и мальчик, который тоже ускорился. При этом девушка убегала от обоих. Я увеличил еще скорость, одновременно думая и осозновая, что меня может хватить лишь на метров 200 только. Но, за каких-то 400 метров я смог отыграть у них метров 100 форы. Когда до них оставалось метров 5, я подумал, что надо еще ускориться, чтобы пройти их как локомотив, иначе они могли попробовать сесть на &ldquo;хвост&rdquo;. Не представляю откуда взялись силы, но я еще прибавил.</p>

<p>Впереди в метрах 10 была та самая девушка. Как мне потом рассказали, все на финише ей кричали и подбадривали, когда я пустился за ней. Но я так долго догонял ее, что было обидно остановиться в двух шагов от цели. В итоге по каким-то неизвестным мне обстоятельствам я на финише смог развить скорость до 3:23 мин/км, обогнав девушку, даже привизя ей несколько метров. В итоге последний км был преодолен за 4:04, а вся дистанция за 24 минуты. Я попал в десятку финишировавших, что очень приятно.</p>

<p>Больше всего порадовали скрытые возможности скоростного и затяжного финиша. Я до сих пор не могу сопоставить время последних 2 км и тренировок на ускорения. Спортивный азарт делает порой что-то невозможное.</p>

<p>Отличные фотографии с события можно посмотреть <a href="https://plus.google.com/100147839796222341099/posts/2839RM31rQc">здесь</a>. Из них  понял, что над техникой бега надо работать и работать, увы.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Код ревью]]></title>
    <link href="http://fightmaster.github.io/blog/2013/09/25/code-review.html"/>
    <updated>2013-09-25T23:50:00+04:00</updated>
    <id>http://fightmaster.github.io/blog/2013/09/25/code-review</id>
    <content type="html"><![CDATA[<p>Решил разбавить тематику и написать что-то вроде справочника, на который всегда можно дать ссылку и обновить. Некоторые вещи лучше не внедрять без объяснений. Нельзя сказать, завтра вы будете применять agile, парное программирование, tdd, так как это делают все крутые ребята.</p>

<!-- more -->


<p>Я не могу работать без код ревью, также как и писать код без тестов. Если из описания вакансии следует, что ребята не пишут тестов, не имеют практики проведения код ревью, мучаются с svn и так далее, я моментально закрываю страницу.</p>

<p>Причин такого &ldquo;неадекватного&rdquo; поведения несколько, попробую хотя бы половину вспомнить и перечислить.</p>

<h3>Саморазвитие</h3>

<p>Невозможно саморазвитие в индивидуальном творчестве. Теорию черпать можно от соседа или книжек. Практика хорошо улучшается, когда тебя критикуют другие, и когда ты смотришь чужой код. Так исчезают собственные помарки, и ты невольно перенимаешь что-то лучшее от соседа. Иначе ваш профессионализм превращается в самолюбование. Никто и никогда не скажет и не спросит: &ldquo;что за гавно? что за ерунда написана? какой баран это написал?&rdquo;. Да и если вы, глядя случайно в чей-то код, такое кричали, это не означает, что от вас мусора меньше, неправда ли?</p>

<h3>Знание проекта</h3>

<p>Знание проекта, того что в нем происходит, не проходит мимо тебя. Ты знаешь, что делает или сделал сосед. Иначе, можно дать просто права на push всем участникам, и каждый будет писать свой проект. Если вам не повезет, и каждый из участников проекта делает индивидуально большой кусок кода от 0 до 100 процентов, то через полгода вы не сможете вернуть свои глаза на место при необходимости внести даже небольшие изменения. Это равносильно тому, что программиста с улицы взять и посадить писать код. Будут только вздохи, охи, ахи, периодическая ругань. Одни эмоции и переживания, никакого кодинга. Возможна и другая ситуация, что вы железный дровосек без сердца, и можете только рубить лес от точки А до точки Б, не задумываясь о том, зачем этот лес посадили, и почему вы вырубаете именно эту часть леса.</p>

<h3>Мы одна команда, одной крови</h3>

<p>Рано или поздно возникнет ситуация, когда вы с соседом сделаете одну и ту же вещь по-разному. Сложно сразу что-то такое вспомнить. Хотя бы следующие простейшие примеры.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'><span class="nv">$string1</span> <span class="o">=</span> <span class="s1">&#39;$a = &#39;</span> <span class="o">.</span> <span class="nv">$a</span> <span class="o">.</span> <span class="s1">&#39;, $b = &#39;</span> <span class="o">.</span> <span class="nv">$b</span> <span class="o">.</span> <span class="s1">&#39;, $a + $b = &#39;</span> <span class="o">.</span> <span class="nv">$c</span><span class="p">;</span>
</span><span class='line'><span class="c1">//or</span>
</span><span class='line'><span class="nv">$string1</span> <span class="o">=</span> <span class="nb">sprintf</span><span class="p">(</span><span class="s1">&#39;$a = %d, $b = %d, $a + $b = %d&#39;</span><span class="p">,</span> <span class="nv">$a</span><span class="p">,</span> <span class="nv">$b</span><span class="p">,</span> <span class="nv">$c</span><span class="p">);</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'><span class="nv">$array</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">foreach</span> <span class="p">(</span><span class="nv">$array</span> <span class="k">as</span> <span class="nv">$key</span> <span class="o">=&gt;</span> <span class="nv">$value</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1"># code...</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="nv">$i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nv">$i</span> <span class="o">&lt;</span> <span class="nv">$countElements</span> <span class="o">=</span> <span class="nv">$count</span><span class="p">(</span><span class="nv">$array</span><span class="p">);</span> <span class="nv">$i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1"># code...</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="nv">$countElements</span> <span class="o">=</span> <span class="nv">$count</span><span class="p">(</span><span class="nv">$array</span><span class="p">);</span>
</span><span class='line'><span class="k">while</span> <span class="p">(</span><span class="nv">$i</span> <span class="o">&lt;</span> <span class="nv">$countElements</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1"># code...</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>Со временем даже от таких мелочей проект превращается в помойку. Сначала мы получаем два стиля в разных кусках кода, постепенно они перемешиваются, и &hellip;</p>

<p>Со сложными примерами, когда какая-то логика приложения делается по-разному, результат еще более близок к могиле. Вы либо получаете дублирование кода, либо первый результат в более плачевном виде. Например, кто-то бросает эксепшины, кто-то возвращает true/false, кто-то в строковом виде сообщение об ошибке, четвертый создает методы &ldquo;черные дыры&rdquo;.</p>

<p>При код ревью команда самоорганизуется, выбирая те или иные правила, соглашения, best practice, и придерживается их. В результате сам код проекта &ndash; единое целое. Его можно теперь разделить по времени: &ldquo;что мы вот так писали очень давно, были молоыде и не опытные, а вот так еще раньше&rdquo;. Но невозможно будет сказать, что это Вася гавнокодит так, а это вот Петькина козюлька. Никаких личностей.</p>

<h3>Звезда по имени Я</h3>

<p>Проходит звездность, приходит профессионализм. Это чаще всего заметно на &ldquo;новичках&rdquo;. Всю жизнь ты писал так и никак иначе, а тут тебе на ревью: &ldquo;что за ерунда?&rdquo;. Главное правильно отнестись к этому. Через это все прошли, никто не родился архитектором, никто не получил опыт при рождении.</p>

<h3>Банальности</h3>

<p>В заключении стоит привести какие-то очевидные плюсы:</p>

<ul>
<li>опечатки, от них никто не застрахован;</li>
<li>плохое настроение/погода &ndash; часто причина детских ошибок даже у опытных мастеров;</li>
<li>большой таск &ndash; вообще это язва, это главное скопление дурных ошибок, автора уже тошнит от кода, глаза слепаются и хочется скорей-скорей и что-то новое.</li>
</ul>


<h3>Парное программирование</h3>

<p>В самой последний момент пришло в голову следующее определение. Код ревью &ndash; это парное программирование офф-лайн, а я к этой практике совсем неравнодушен. Большинство идей, от простых до архитектурных, приходило мне в голову, только когда я смотрел на чужой код. Свежий взгляд он всегда ценее, чем уставший. Тем более для тебя все написали, а если еще и код понятный, то посидеть и подумать одно удовольствие.</p>

<p>Очень часто, вы что-то прочитаете, услышите, а применить и самому написать некогда. Большая вероятность, что сосед уже это пишет и вам нужно только просто глянуть ;).</p>

<h3>Полезные ссылки</h3>

<p>Вообще, в сети много статей разных на эту тему. Но одна ссылка мне очень понравилась. Там наверняка есть все, что я забыл рассказать, в тезисах.</p>

<ul>
<li><a href="http://www.mindmeister.com/ru/234594602/code-review-2">code review</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Unit Tests]]></title>
    <link href="http://fightmaster.github.io/blog/2013/09/23/unit-tests.html"/>
    <updated>2013-09-23T23:30:00+04:00</updated>
    <id>http://fightmaster.github.io/blog/2013/09/23/unit-tests</id>
    <content type="html"><![CDATA[<p>Свершилось, я начинаяю писать цикл статей про unit tests.
С января 2013 года я начал задумываться о создании курса по тестированию, разработке через тестирование, но времени катастрофически на это нет. При этом стали &ldquo;проходить мимо&rdquo; интересные моменты из реальной жизни, которые потом в будущем просто не собрать. В итоге месяца два назад я решил, что буду &ldquo;по горячим следам&rdquo; писать статьи, а затем как-то курс сам собой образуется.</p>

<!-- more -->


<h3>Зачем же нужны тесты?</h3>

<p>Вообще отрицать пользу каких-либо тестов &ndash; ненормально. Я считаю, что нельзя называть код чистым, если он не покрыт тестами. Как минимум, совсем плохой код вы не сможете просто протестировать.</p>

<p>Дальше идет интересная закономерность, чем проще писать тест, тем лучше ваш код. Если вам тяжело протестировать ваш класс/метод, значит скорее всего в нем ощибка, допустим архитектурная. Простые примеры:</p>

<ul>
<li>метод берет на себя слишком много обязанностей</li>
<li>класс имеет много зависимостей</li>
</ul>


<p>Да и потом в будущем вы что-то меняете, с тестами вы чувствуюте себя уверенее :), что ничего не сломали.</p>

<h3>Так почему же большинство не пишет тесты?</h3>

<p>Из адекватных объяснений у меня есть только два: не умеют и не могут, а скорее не хотят. На самом деле на своей шкуре знаю, как тяжело внедрить тестирование в большой проект, который годами развивался без тестов. На текущем моем проекте, как мне известно, до меня два раза пытались внедрить юнит тесты, затем я еще предпринимал попытки две или три.</p>

<p>Но внедрить тесты и начать их писать &ndash; дело не сложное. Думаю большинство так или иначе начинало это делать. Самое главное продолжить их поддерживать. Рано или поздно написание теста превращается в какое-то мучение, и большинство бросает это благородное занятие.</p>

<p>Причин возникновения таких ситуаций множество. Самая банальная и первая &ndash; генерация фикстур. Из теории, а возможно и из определения unit test (<a href="http://en.wikipedia.org/wiki/Unit_testing">wiki</a>), следует, что каждый тест должен быть полностью независим от других. Это означает, что перед каждым тестом вы должны заполнять базу данных своими индивидуальными фикстурами. А структура базы у долгосрочных проектов меняется, и все фикстуры падают. И так далее. При этом эта проблема возникает постоянно с ростом проекта. Сейчас, при написании статьи, я подумал, что на текущем моем проекте такая проблема снова есть и мучает всех. Буду думать&hellip;</p>

<p>Существует много других поводов сказать: &ldquo;что ложь и неправда, что писать код с тестами быстрее и удобнее&rdquo;. Нехватка опытных специалистов, времени на разработку &ndash; губительно сказываается для многих проектов разного уровня и масштаба.</p>

<h3>Что же делать?</h3>

<p>Вообще, код юнит тестов такой же код, он требует постоянного рефакторинга. Если вы не будете его улучшать, следить за ним, то его невозможно будет поддерживать. Чем понятнее и выразителен тест для другого программиста, тем лучше.</p>

<p>При написании кода мы стараемся дать сразу понять: что делает метод, что возвращает, что хранит переменная и т.д..</p>

<p>При написании теста мы стараемся показать сразу: что тестируем и какую ситуацию описывают входные данные и т.д..</p>

<p>В идеальном мире у вас чистые и понятные тесты с красивым и простым кодом проекта. Эти две составляющие подвергаются непрерывному рефакторингу и развитию.</p>

<h3>О чем шла речь вначале?</h3>

<p>Так вот в данном цикле статей, я не буду рассказывать о каких-то азах, которые можно прочитать в документации или на вики. В основном здесь будут публиковаться интересные на мой взгляд решения, правила, находки, best practice для меня на данный момент, которые я и мои коллеги применяем, а может хотим лишь применить :).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Как увидеть и применить паттерны проектирования?]]></title>
    <link href="http://fightmaster.github.io/blog/2013/09/19/how-to-see-and-apply-the-design-patterns.html"/>
    <updated>2013-09-19T23:22:00+04:00</updated>
    <id>http://fightmaster.github.io/blog/2013/09/19/how-to-see-and-apply-the-design-patterns</id>
    <content type="html"><![CDATA[<p>Anthony Ferrara aka ircmaxell опубликовал пост <a href="http://blog.ircmaxell.com/2013/09/beyond-design-patterns.html">Beyond Design Patterns</a>, прочтя который я не cмог промолчать. Он настолько попал для меня в десятку, что моим эмоциям и восторгу нет предела.</p>

<!-- more -->


<p>Я снимаю шляпу перед Энтони, так как он сформулировал кратко, понятно, доступно мои мысли, которые я стараюсь донести до своих ребят в последнее время.</p>

<p>Многие программисты знают кучу паттернов, перечитывают банду четерех, но при этом никогда не понимают как это применить, когда и в какой ситуации. Я и сам эту книжку перечитываю/перелистываю ежегодно для освежения материала. Хочу отметить, что каждый раз нахожу что-то новенькое для себя. В этом году пришел к выводу, что нельзя в банде четерех читать реализацию паттерна, особенно человеку, который первый раз берет книжку. Абсолютно неважно, как это реализовывать. Главное понимать, знать и ощущать: что? где? когда? зачем? и почему? Своим &ldquo;протеже&rdquo; я даже запретил читать реализацию. Если вы точно скажете: &ldquo;ага, запахло паттерном Хранитель&rdquo;, вы всегда откроете книжку или гугл, и посмотрите реализацию. Но уделяя большое внимание при чтении реализации, разбираясь в каждой запятой, вы забываете самое главное: что? где? когда? зачем? и почему? Поверьте, придет время, когда вам нужно будет применить паттерн, тогда вы откроете этот каталог и сделаете как вам лучше.</p>

<p>Простой пример, сегодня утром меня попросили совета по проблеме. У ребят возникла какая-то задача, они совместно ее решали, нарисовали uml диаграмму, чтобы затем обсудить. Первые слова, которые прозвучали: &ldquo;У нас есть объект, нам нужно иметь возможность сохранить его состояние и при возможности откатиться до него&rdquo;. Фраза уже сама по себе отвечает на вопросы &ldquo;что нам нужно и зачем&rdquo;.</p>

<blockquote><p>Не нарушая инкапсуляции, фиксирует и выносит за пределы объекта его внутренее состояние так, чтобы позднее можно было бы восстановить в нем объект.</p><footer><strong>[Банда четырех. Паттерн Memento. Назначение. 2012 г.]</strong></footer></blockquote>


<p>В среднем раз в неделю я задаю вопросы ребятам на код ревью: &ldquo;а что делает код? почему именно он это делает? а что можно еще изменить?&rdquo;, с целью обратить внимание на содержание кода и существующих в нем предпосылок к чему-то. Все лежит на поверхности, нужно лишь знать чего вы хотите, что вам нужно, или что делает уже существующий код.</p>

<p>Поэтому, если вам нужны еще советы как перейти от теории к практике, гоу: <a href="http://blog.ircmaxell.com/2013/09/beyond-design-patterns.html">Beyond Design Patterns</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Полторы комнаты]]></title>
    <link href="http://fightmaster.github.io/blog/2013/09/16/a-room-and-a-half.html"/>
    <updated>2013-09-16T22:30:00+04:00</updated>
    <id>http://fightmaster.github.io/blog/2013/09/16/a-room-and-a-half</id>
    <content type="html"><![CDATA[<p>Если у вас пусто в холодильнике, на голове проглядывает седина, а вам лишь 25, значит что-то в жизни пошло не так.</p>

<!-- more -->


<p>Я давно уже ничего не писал в этом блоге, с марта.
В жизни произошла куча событий, и что было не так уже не понять. За это время много раз хотелось написать про жизнь, соревнования, разработку, но общее отвращение к компу, возникающее дома, не позволяло это сделать. Сегодня был такой же отвратный день, но заставил поднять свою задницу к ноуту.</p>

<p>Сейчас я в штатах и все ждут от меня каких-то эмоций, рассказов. Вспомнились слова Мара:</p>

<blockquote><p>Но ему не до того,<br/>Про другое мысли.</p></blockquote>


<p>Недавно нашел, кажется, определение своего состояния, но оно такое же непонятное, как и само состояние. Однажды вечером, я понял, что чувствовал герой фильма &ldquo;Полторы комнаты, или Сентиментальное путешествие на Родину&rdquo;. Я несколько раз видел это произведение, но лишь переживал лирическому герою. Что-то в этом есть, знаете ли. Вы вроде и в &ldquo;шоколаде&rdquo;, вокруг вас идет прекрасная жизнь, все доступно, кто-то об этом лишь и мечтает, кто-то вами гордится. А вам нельзя домой еще два месяца, да, всего лишь два месяца. Но также как и Бродский, вы понимаете, что ничем не поможете больной старушке, детям, жене, да и вообще близким. Это состояние обреченности. Вы позвоните, улыбнетесь, скажите что все хорошо, вам ответят также взаимно.</p>

<p>Ты ходишь ежедневно по ресторанам, можешь ходить по паркам, красивым и чистым улицам, но ты никогда не крикнешь слова из песни &ldquo;Зато как погуляли!&rdquo;, неохото делиться эгоистичной радостью.</p>

<p>Вообще, в америке все другое. Начиная от унитаза, заканчивая отношением людей к природе и окружающим. Для меня это просто приятно, чрезвычайно приятно. Очень часто ощущаю себя как на соревнованиях, где 98 процентов людей разделят с тобой последний глоток воды или просто подбодрят тебя улыбкой или приветствием. Бежал, кажется вчера, встретил велосипедиста, друг другу улыбнулись и сказали доброе утро. И ты бежишь сразу как-то быстрее и веселее. Не припомню такого у нас. За одну пробежку можно встретить с десяток-два белочек. Пару раз видел скунсов, зайчат. Белки забавные, иногда прячутся от меня за дерево. Наверное, это два самых главных впечатления. Остальное &ndash; &ldquo;ерунда, дело житейское&rdquo;.</p>

<p>Ну вот, кажется что-то да и написал, хочется верить, что это конец долгого молчания. Надо бы подбить прочтенные зимой лекции в блоге, опубликовать тонну материала по тестированию, паттернам. Поживем немного и узнаем.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[25 лет спустя...]]></title>
    <link href="http://fightmaster.github.io/blog/2013/03/03/happy-birthday-2013.html"/>
    <updated>2013-03-03T21:57:00+04:00</updated>
    <id>http://fightmaster.github.io/blog/2013/03/03/happy-birthday-2013</id>
    <content type="html"><![CDATA[<p>На днях мне стукнуло 25. Приятно было получить поздравления от коллег по работе, друзей, и ооочееень старых друзей, с котрыми видешься раз в несколько лет.</p>

<!-- more -->


<p>На работе подарили шикарную футболочку с отголосками гитхаба.</p>

<p><img src="http://dl.dropbox.com/u/59987544/Photo%2001.03.13%2C%2011%2020%2057.jpg" width="300">
<img src="http://dl.dropbox.com/u/59987544/Photo%2001.03.13%2C%2011%2021%2005.jpg" width="300"></p>

<p>Также прошло уже 2 года, как я оставил проект f-legion.com. Сейчас я уже о нем не вспоминаю и не жалею о своем поступке.
Как я это оцениваю спустя время? Сложно сказать, это был первым и самым мощным поступком моим, когда идеологические ценности оказались выше материальных.
После этого я не раз совершал внутренние победы над самим собой. Отчасти, это было и самоуничтожение, ведь я отказался от ребенка, которого воспитывал и растил 5 лет, практически с самого рождения.
Иногда мне жаль, что я не могу его изменить и сделать лучше, а мог бы.
Никому я там уже не нужен, возможно, это и хорошо.</p>

<p>Вчера, 2 марта, сын занял 2 место на первенстве области по у-шу. Эх, тяжело мне с ним дается все, но вроде мой новый график работы и занятия с ним дают результат. И кстати, именно в этот день, как 1.5 года нет моего отца и его дедушки, которого он безумно любил&hellip;
Эх, как мне его не хватает, знали бы вы.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Задания к лекции "Работа со строками"]]></title>
    <link href="http://fightmaster.github.io/blog/2013/02/24/four-lecture-working-with-strings.html"/>
    <updated>2013-02-24T00:50:00+04:00</updated>
    <id>http://fightmaster.github.io/blog/2013/02/24/four-lecture-working-with-strings</id>
    <content type="html"><![CDATA[<p>С небольшим опозданием выложены <a href="http://fightmaster.github.io/php-lectures/05-working-with-strings.html">задания</a> к четвертой лекции.
Задача про палиндромы имеет подводные камни, будьте внимательны.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Вторая лекция: Управляющие структуры]]></title>
    <link href="http://fightmaster.github.io/blog/2013/02/14/second-lecture-control-structures.html"/>
    <updated>2013-02-14T02:30:00+04:00</updated>
    <id>http://fightmaster.github.io/blog/2013/02/14/second-lecture-control-structures</id>
    <content type="html"><![CDATA[<p>Выложены <a href="http://fightmaster.github.io/php-lectures/03-control-structures.html">материалы</a> ко второй лекции. Встретимся через 5.5 часов:).
Домашнее задание будет доступно в субботу.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting Up Symfony With Nginx Server]]></title>
    <link href="http://fightmaster.github.io/blog/2013/02/12/setting-up-symfony-with-nginx-server.html"/>
    <updated>2013-02-12T23:21:00+04:00</updated>
    <id>http://fightmaster.github.io/blog/2013/02/12/setting-up-symfony-with-nginx-server</id>
    <content type="html"><![CDATA[<p>Каждый раз, когда я обновляю систему или nginx, я постоянно мучаюсь с настройкой.
С переходом на <code>php 5.4</code> я столкнулся с новой проблемой <code>access denied</code>.
Ниже выкладываю рабочий конфиг для <code>nginx/1.2.6</code> и <code>symfony2</code>;</p>

<!-- more -->




<figure class='code'><figcaption><span>nginx/conf.d/project (project)</span> <a href='http://fightmaster.github.io/downloads/code/nginx/conf.d/project'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
</pre></td><td class='code'><pre><code class=''><span class='line'><span class="nt">server</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">listen</span>  <span class="m">80</span><span class="p">;</span>
</span><span class='line'>    <span class="n">server_name</span> <span class="n">project_name</span><span class="p">;</span>
</span><span class='line'>    <span class="n">root</span> <span class="o">/</span><span class="n">project_path</span><span class="o">/</span><span class="n">web</span><span class="p">;</span>
</span><span class='line'>    <span class="n">index</span> <span class="n">app_dev</span><span class="o">.</span><span class="n">php</span> <span class="n">app</span><span class="o">.</span><span class="n">php</span> <span class="n">app_test</span><span class="o">.</span><span class="n">php</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="err">##</span> <span class="err">по</span> <span class="err">умолчанию</span> <span class="err">работает</span> <span class="err">под</span> <span class="n">dev</span> <span class="n">env</span>
</span><span class='line'>    <span class="n">rewrite</span> <span class="o">^/</span><span class="n">app_dev</span><span class="err">\</span><span class="o">.</span><span class="n">php</span><span class="o">/?</span><span class="p">(</span><span class="o">.*</span><span class="p">)</span><span class="err">$</span> <span class="o">/</span><span class="err">$</span><span class="m">1</span> <span class="n">permanent</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">location</span> <span class="o">/</span> <span class="err">{</span>
</span><span class='line'>        <span class="err">##</span> <span class="err">данный</span> <span class="err">блок</span> <span class="err">актуален</span> <span class="err">для</span> <span class="err">настройки</span> <span class="n">OPTIONS</span>
</span><span class='line'>        <span class="n">if</span> <span class="p">(</span><span class="err">$</span><span class="n">request_method</span> <span class="o">=</span> <span class="n">OPTIONS</span> <span class="p">)</span> <span class="err">{</span>
</span><span class='line'>            <span class="err">##</span> <span class="err">при</span> <span class="err">необходимости</span> <span class="err">можно</span> <span class="err">указать</span> <span class="err">специфический</span> <span class="k">url</span>
</span><span class='line'>            <span class="n">add_header</span> <span class="n">Access</span><span class="o">-</span><span class="n">Control</span><span class="o">-</span><span class="n">Allow</span><span class="o">-</span><span class="n">Origin</span> <span class="s2">&quot;*&quot;</span><span class="p">;</span>
</span><span class='line'>            <span class="n">add_header</span> <span class="n">Access</span><span class="o">-</span><span class="n">Control</span><span class="o">-</span><span class="n">Allow</span><span class="o">-</span><span class="n">Methods</span> <span class="s2">&quot;GET, OPTIONS, POST, PUT, DELETE&quot;</span><span class="p">;</span>
</span><span class='line'>            <span class="err">##</span> <span class="err">при</span> <span class="err">необходимсти</span> <span class="err">добавить</span> <span class="err">заголовки</span><span class="o">,</span> <span class="err">например</span> <span class="n">X</span><span class="o">-</span><span class="n">WSSE</span>
</span><span class='line'>            <span class="n">add_header</span> <span class="n">Access</span><span class="o">-</span><span class="n">Control</span><span class="o">-</span><span class="n">Allow</span><span class="o">-</span><span class="n">Headers</span> <span class="s2">&quot;origin, accept&quot;</span><span class="p">;</span>
</span><span class='line'>            <span class="n">add_header</span> <span class="n">Access</span><span class="o">-</span><span class="n">Control</span><span class="o">-</span><span class="n">Allow</span><span class="o">-</span><span class="n">Credentials</span> <span class="s2">&quot;true&quot;</span><span class="p">;</span>
</span><span class='line'>            <span class="n">add_header</span> <span class="n">Content</span><span class="o">-</span><span class="n">Length</span> <span class="m">0</span><span class="p">;</span>
</span><span class='line'>            <span class="n">return</span> <span class="m">200</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="nt">index</span> <span class="nt">app_dev</span><span class="nc">.php</span><span class="o">;</span>
</span><span class='line'>        <span class="nt">try_files</span> <span class="err">$</span><span class="nt">uri</span> <span class="k">@rewriteapp</span><span class="p">;</span>
</span><span class='line'>    <span class="err">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">location</span> <span class="k">@rewriteapp</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">rewrite</span> <span class="o">^(.*)</span><span class="err">$</span> <span class="o">/</span><span class="nt">app_dev</span><span class="nc">.php</span><span class="o">/</span><span class="err">$</span><span class="nt">1</span> <span class="nt">last</span><span class="o">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="err">##</span> <span class="nt">pass</span> <span class="nt">php</span> <span class="nt">scripts</span> <span class="nt">to</span> <span class="nt">fastcgi</span>
</span><span class='line'>    <span class="nt">location</span> <span class="o">~</span> <span class="o">^/(</span><span class="nt">app</span><span class="o">|</span><span class="nt">app_dev</span><span class="o">|</span><span class="nt">app_test</span><span class="o">)</span><span class="err">\</span><span class="nc">.php</span><span class="o">(/|</span><span class="err">$</span><span class="o">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">fastcgi_pass</span> <span class="n">unix</span><span class="o">:/</span><span class="n">tmp</span><span class="o">/</span><span class="n">php</span><span class="o">-</span><span class="n">fpm</span><span class="o">.</span><span class="n">socket</span><span class="p">;</span>
</span><span class='line'>        <span class="n">fastcgi_split_path_info</span> <span class="o">^</span><span class="p">(</span><span class="o">.+</span><span class="err">\</span><span class="o">.</span><span class="n">php</span><span class="p">)(</span><span class="o">/.*</span><span class="p">)</span><span class="err">$</span><span class="p">;</span>
</span><span class='line'>        <span class="n">include</span> <span class="o">/</span><span class="n">etc</span><span class="o">/</span><span class="n">nginx</span><span class="o">/</span><span class="n">fastcgi_params</span><span class="p">;</span>
</span><span class='line'>        <span class="n">fastcgi_param</span>  <span class="n">SCRIPT_FILENAME</span> <span class="err">$</span><span class="n">document_root</span><span class="err">$</span><span class="n">fastcgi_script_name</span><span class="p">;</span>
</span><span class='line'>        <span class="n">fastcgi_param</span>  <span class="n">HTTPS</span> <span class="n">off</span><span class="p">;</span>
</span><span class='line'>        <span class="n">fastcgi_param</span> <span class="n">PATH_INFO</span> <span class="err">$</span><span class="n">fastcgi_path_info</span><span class="p">;</span>
</span><span class='line'>        <span class="n">fastcgi_param</span> <span class="n">PATH_TRANSLATED</span> <span class="err">$</span><span class="n">document_root</span><span class="err">$</span><span class="n">fastcgi_path_info</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="err">##</span> <span class="nt">disable</span> <span class="nt">viewing</span> <span class="nc">.htaccess</span> <span class="o">&amp;</span> <span class="nc">.htpassword</span>
</span><span class='line'>    <span class="nt">location</span> <span class="o">~</span> <span class="o">/</span><span class="err">\</span><span class="nc">.ht</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">deny</span>  <span class="n">all</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="err">}</span>
</span><span class='line'>
</span><span class='line'><span class="nt">server</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">listen</span> <span class="m">443</span><span class="p">;</span>
</span><span class='line'>    <span class="n">server_name</span> <span class="n">project_name</span><span class="p">;</span>
</span><span class='line'>    <span class="n">root</span> <span class="o">/</span><span class="n">project_path</span><span class="o">/</span><span class="n">web</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">ssl</span> <span class="n">on</span><span class="p">;</span>
</span><span class='line'>    <span class="n">ssl_certificate</span> <span class="o">/</span><span class="n">etc</span><span class="o">/</span><span class="n">ssl</span><span class="o">/</span><span class="n">certs</span><span class="o">/</span><span class="n">project</span><span class="o">.</span><span class="n">crt</span><span class="p">;</span>
</span><span class='line'>    <span class="n">ssl_certificate_key</span> <span class="o">/</span><span class="n">etc</span><span class="o">/</span><span class="n">ssl</span><span class="o">/</span><span class="n">private</span><span class="o">/</span><span class="n">project</span><span class="o">.</span><span class="n">key</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="err">#</span> <span class="n">strip</span> <span class="n">app</span><span class="o">.</span><span class="n">php</span><span class="o">/</span> <span class="n">prefix</span> <span class="n">if</span> <span class="n">it</span> <span class="n">is</span> <span class="n">present</span>
</span><span class='line'>    <span class="n">rewrite</span> <span class="o">^/</span><span class="n">app_dev</span><span class="err">\</span><span class="o">.</span><span class="n">php</span><span class="o">/?</span><span class="p">(</span><span class="o">.*</span><span class="p">)</span><span class="err">$</span> <span class="o">/</span><span class="err">$</span><span class="m">1</span> <span class="n">permanent</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">location</span> <span class="o">/</span> <span class="err">{</span>
</span><span class='line'>        <span class="n">index</span> <span class="n">app_dev</span><span class="o">.</span><span class="n">php</span><span class="p">;</span>
</span><span class='line'>        <span class="n">try_files</span> <span class="err">$</span><span class="n">uri</span> <span class="o">@</span><span class="n">rewriteapp</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">location</span> <span class="k">@rewriteapp</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">rewrite</span> <span class="o">^(.*)</span><span class="err">$</span> <span class="o">/</span><span class="nt">app_dev</span><span class="nc">.php</span><span class="o">/</span><span class="err">$</span><span class="nt">1</span> <span class="nt">last</span><span class="o">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="err">#</span> <span class="nt">pass</span> <span class="nt">the</span> <span class="nt">PHP</span> <span class="nt">scripts</span> <span class="nt">to</span> <span class="nt">FastCGI</span> <span class="nt">server</span> <span class="nt">listening</span> <span class="nt">on</span> <span class="nt">127</span><span class="nc">.0.0.1</span><span class="nd">:9000</span>
</span><span class='line'>    <span class="nt">location</span> <span class="o">~</span> <span class="o">^/(</span><span class="nt">app</span><span class="o">|</span><span class="nt">app_dev</span><span class="o">|</span><span class="nt">app_test</span><span class="o">)</span><span class="err">\</span><span class="nc">.php</span><span class="o">(/|</span><span class="err">$</span><span class="o">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">fastcgi_pass</span> <span class="n">unix</span><span class="o">:/</span><span class="n">tmp</span><span class="o">/</span><span class="n">php</span><span class="o">-</span><span class="n">fpm</span><span class="o">.</span><span class="n">socket</span><span class="p">;</span>
</span><span class='line'>        <span class="n">fastcgi_split_path_info</span> <span class="o">^</span><span class="p">(</span><span class="o">.+</span><span class="err">\</span><span class="o">.</span><span class="n">php</span><span class="p">)(</span><span class="o">/.*</span><span class="p">)</span><span class="err">$</span><span class="p">;</span>
</span><span class='line'>        <span class="n">include</span> <span class="o">/</span><span class="n">etc</span><span class="o">/</span><span class="n">nginx</span><span class="o">/</span><span class="n">fastcgi_params</span><span class="p">;</span>
</span><span class='line'>        <span class="n">fastcgi_param</span> <span class="n">SCRIPT_FILENAME</span> <span class="err">$</span><span class="n">document_root</span><span class="err">$</span><span class="n">fastcgi_script_name</span><span class="p">;</span>
</span><span class='line'>        <span class="n">fastcgi_param</span> <span class="n">HTTPS</span> <span class="n">on</span><span class="p">;</span>
</span><span class='line'>        <span class="n">fastcgi_param</span> <span class="n">PATH_INFO</span> <span class="err">$</span><span class="n">fastcgi_path_info</span><span class="p">;</span>
</span><span class='line'>        <span class="n">fastcgi_param</span> <span class="n">PATH_TRANSLATED</span> <span class="err">$</span><span class="n">document_root</span><span class="err">$</span><span class="n">fastcgi_path_info</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="err">##</span> <span class="nt">disable</span> <span class="nt">viewing</span> <span class="nc">.htaccess</span> <span class="o">&amp;</span> <span class="nc">.htpassword</span>
</span><span class='line'>    <span class="nt">location</span> <span class="o">~</span> <span class="o">/</span><span class="err">\</span><span class="nc">.ht</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">deny</span> <span class="n">all</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="err">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Полезная ссылка по теме: <a href="http://wiki.nginx.org/Symfony">http://wiki.nginx.org/Symfony</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Первая лекция: Основы PHP]]></title>
    <link href="http://fightmaster.github.io/blog/2013/02/12/first-lecture-php-basics.html"/>
    <updated>2013-02-12T21:14:00+04:00</updated>
    <id>http://fightmaster.github.io/blog/2013/02/12/first-lecture-php-basics</id>
    <content type="html"><![CDATA[<p>Она, кажется, сказала: &ldquo;Дима, давай жги&rdquo;. 100% посещаемость из двух человек, круто. Выкладываю <a href="http://fightmaster.github.io/php-lectures/02-php-basics.html">материалы</a>.
Желаю удачи в выполнении домашнего задания :).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Поехали!]]></title>
    <link href="http://fightmaster.github.io/blog/2013/02/09/go-go-go.html"/>
    <updated>2013-02-09T17:36:00+04:00</updated>
    <id>http://fightmaster.github.io/blog/2013/02/09/go-go-go</id>
    <content type="html"><![CDATA[<p>О создании личного блога мечтал последние два года. За это время в личной жизни и на работе много всего произошло.</p>

<p>Итак, со вторника я начинаю читать лекции по php. Благодаря github и octopress я надеюсь мечта идиота сбудется,
и блог начнет свою жизнь.</p>
]]></content>
  </entry>
  
</feed>
